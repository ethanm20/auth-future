{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/FeatureImage/FeatureImage.js"],"sourcesContent":["import { Container, Row, Col, Button} from 'react-bootstrap';\n\nconst FeatureImage = () => {\n    return (\n        <>\n            <div className=\"feature-image\" style={{width: '100%', padding: 0, backgroundColor: '#111111'}}>\n                <Container style={{}}>\n                    <Row className=\"align-items-center\" style={{ height: '80vh' }}>\n                        <Col md={6} className=\"text-white\">\n                            <h1 style={{fontSize: '60px', fontWeight: '700'}}>Learn about the <span style={{color: '#9b59b6'}}>future</span> of authentication.</h1>\n                            {/* Call to Action Button */}\n                            <Row> \n                                <Col md={5}>\n                                    <Button variant=\"light\" size=\"lg\" href=\"#webauthn-section\" className=\"cta-button\">\n                                        WebAuthn Passkeys <i className=\"bi bi-arrow-right\"></i>\n                                    </Button>\n                                </Col>\n                                <Col md={7}>\n                                    <Button variant=\"outline-light\" size=\"lg\" href=\"#totp-section\" className=\"cta-button\">\n                                        Time-Based One Time Passwords <i class=\"bi bi-arrow-right\"></i>\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </>\n    )\n}\n\nexport default FeatureImage"],"names":[],"mappings":";;;;;AAAA;AAAA;AAAA;AAAA;;;AAEA,MAAM,eAAe;IACjB,qBACI;kBACI,cAAA,qKAAC;YAAI,WAAU;YAAgB,OAAO;gBAAC,OAAO;gBAAQ,SAAS;gBAAG,iBAAiB;YAAS;sBACxF,cAAA,qKAAC,oMAAS;gBAAC,OAAO,CAAC;0BACf,cAAA,qKAAC,kLAAG;oBAAC,WAAU;oBAAqB,OAAO;wBAAE,QAAQ;oBAAO;8BACxD,cAAA,qKAAC,kLAAG;wBAAC,IAAI;wBAAG,WAAU;;0CAClB,qKAAC;gCAAG,OAAO;oCAAC,UAAU;oCAAQ,YAAY;gCAAK;;oCAAG;kDAAgB,qKAAC;wCAAK,OAAO;4CAAC,OAAO;wCAAS;kDAAG;;;;;;oCAAa;;;;;;;0CAEhH,qKAAC,kLAAG;;kDACA,qKAAC,kLAAG;wCAAC,IAAI;kDACL,cAAA,qKAAC,2LAAM;4CAAC,SAAQ;4CAAQ,MAAK;4CAAK,MAAK;4CAAoB,WAAU;;gDAAa;8DAC5D,qKAAC;oDAAE,WAAU;;;;;;;;;;;;;;;;;kDAGvC,qKAAC,kLAAG;wCAAC,IAAI;kDACL,cAAA,qKAAC,2LAAM;4CAAC,SAAQ;4CAAgB,MAAK;4CAAK,MAAK;4CAAgB,WAAU;;gDAAa;8DACpD,qKAAC;oDAAE,OAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAU/E;uCAEe","debugId":null}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/Footer/Footer.js"],"sourcesContent":["import { Container, Row, Col, Button} from 'react-bootstrap';\n\n\n\nexport default function Footer() {\n    return (\n    <>\n    <div id=\"footer-container\" style={{color: '#FFF', backgroundColor: '#111111', maxWidth: '100%'}}>\n        <Container style={{maxWidth: '100%'}}>\n            <Row style={{height: '10vh'}}>\n                <Col md={6} style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', fontSize: '24px'}}>\n                    <Row>\n                        <span>AuthFuture</span>\n                    </Row>\n                    \n                </Col>\n                <Col md={6} style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center'}}>\n                    <Row>\n                        <Col md={12} style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center', gap: '5px', fontSize: '20px'}}>\n                            <a href=\"https://linkedin.com/in/ethan-marlow\" target='_blank' style={{color: '#FFF'}}>\n                                <i class=\"bi bi-linkedin\"></i>\n                            </a>\n                            <a href=\"https://github.com/ethanm20\" target='_blank' style={{color: '#FFF'}}>\n                                <i class=\"bi bi-github\"></i>\n                            </a>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            <Row style={{borderTop: '1px solid #f9f9f9'}}>\n                <Col md={12} style={{textAlign: 'center'}}>\n                    <span>&copy; 2025 <b>Ethan Marlow</b>     All rights reserved.</span>\n                </Col>\n            </Row>\n        </Container>\n    </div>\n    </>\n    )\n}"],"names":[],"mappings":";;;;;AAAA;AAAA;AAAA;;;AAIe,SAAS;IACpB,qBACA;kBACA,cAAA,qKAAC;YAAI,IAAG;YAAmB,OAAO;gBAAC,OAAO;gBAAQ,iBAAiB;gBAAW,UAAU;YAAM;sBAC1F,cAAA,qKAAC,oMAAS;gBAAC,OAAO;oBAAC,UAAU;gBAAM;;kCAC/B,qKAAC,kLAAG;wBAAC,OAAO;4BAAC,QAAQ;wBAAM;;0CACvB,qKAAC,kLAAG;gCAAC,IAAI;gCAAG,OAAO;oCAAC,SAAS;oCAAQ,eAAe;oCAAO,gBAAgB;oCAAU,YAAY;oCAAU,UAAU;gCAAM;0CACvH,cAAA,qKAAC,kLAAG;8CACA,cAAA,qKAAC;kDAAK;;;;;;;;;;;;;;;;0CAId,qKAAC,kLAAG;gCAAC,IAAI;gCAAG,OAAO;oCAAC,SAAS;oCAAQ,eAAe;oCAAO,gBAAgB;oCAAU,YAAY;gCAAQ;0CACrG,cAAA,qKAAC,kLAAG;8CACA,cAAA,qKAAC,kLAAG;wCAAC,IAAI;wCAAI,OAAO;4CAAC,SAAS;4CAAQ,eAAe;4CAAO,gBAAgB;4CAAU,YAAY;4CAAU,KAAK;4CAAO,UAAU;wCAAM;;0DACpI,qKAAC;gDAAE,MAAK;gDAAuC,QAAO;gDAAS,OAAO;oDAAC,OAAO;gDAAM;0DAChF,cAAA,qKAAC;oDAAE,OAAM;;;;;;;;;;;0DAEb,qKAAC;gDAAE,MAAK;gDAA8B,QAAO;gDAAS,OAAO;oDAAC,OAAO;gDAAM;0DACvE,cAAA,qKAAC;oDAAE,OAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAM7B,qKAAC,kLAAG;wBAAC,OAAO;4BAAC,WAAW;wBAAmB;kCACvC,cAAA,qKAAC,kLAAG;4BAAC,IAAI;4BAAI,OAAO;gCAAC,WAAW;4BAAQ;sCACpC,cAAA,qKAAC;;oCAAK;kDAAY,qKAAC;kDAAE;;;;;;oCAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOzD","debugId":null}},
    {"offset": {"line": 388, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/NavigationBar/NavigationBar.js"],"sourcesContent":["//import Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\nimport { Container, Row, Col, Button} from 'react-bootstrap';\n\nexport default function NavigationBar() {\n    return (\n        <>\n          <Navbar variant=\"dark\" sticky=\"top\" expand=\"lg\" width=\"100%\" style={{top: '0px', zIndex: '30', marginTop:' -49px', height: '50px', backgroundColor: '#111111'}}>\n            <Container style={{height: '50px', display: 'flex', flexDirection: 'row'}}>\n              <Navbar.Brand href=\"/\" style={{display: 'flex', width: '105px'}}>AuthFuture</Navbar.Brand>\n              <Nav className=\"me-auto\" style={{justifyContent: 'end', flexDirection: 'row', display: 'flex', width: 'calc(100% - 150px)'}}>\n                  <Nav.Item>\n                    <Nav.Link href=\"https://github.com/ethanm20/AuthFuture\" target=\"_blank\">\n                      <Button variant=\"outline-light\" style={{borderRadius: '25px'}} className=\"github-header-outer\">\n                        <i class=\"bi bi-github\"></i> <span className=\"github-text\">Source Code</span>\n                      </Button>\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item style={{display: 'none'}}>\n                    <Nav.Link href=\"https://www.linkedin.com/in/ethan-marlow\" target=\"_blank\">\n                      <i class=\"bi bi-moon\"></i>\n                    </Nav.Link>\n                  </Nav.Item>\n              </Nav>\n            </Container>\n          </Navbar>\n        </>\n    )\n}"],"names":[],"mappings":"AAAA,oDAAoD;;;;;;AACpD;AACA;AAGA;AAAA;;;;;;AAEe,SAAS;IACpB,qBACI;kBACE,cAAA,qKAAC,uJAAM;YAAC,SAAQ;YAAO,QAAO;YAAM,QAAO;YAAK,OAAM;YAAO,OAAO;gBAAC,KAAK;gBAAO,QAAQ;gBAAM,WAAU;gBAAU,QAAQ;gBAAQ,iBAAiB;YAAS;sBAC3J,cAAA,qKAAC,oMAAS;gBAAC,OAAO;oBAAC,QAAQ;oBAAQ,SAAS;oBAAQ,eAAe;gBAAK;;kCACtE,qKAAC,uJAAM,CAAC,KAAK;wBAAC,MAAK;wBAAI,OAAO;4BAAC,SAAS;4BAAQ,OAAO;wBAAO;kCAAG;;;;;;kCACjE,qKAAC,oJAAG;wBAAC,WAAU;wBAAU,OAAO;4BAAC,gBAAgB;4BAAO,eAAe;4BAAO,SAAS;4BAAQ,OAAO;wBAAoB;;0CACtH,qKAAC,oJAAG,CAAC,IAAI;0CACP,cAAA,qKAAC,oJAAG,CAAC,IAAI;oCAAC,MAAK;oCAAyC,QAAO;8CAC7D,cAAA,qKAAC,2LAAM;wCAAC,SAAQ;wCAAgB,OAAO;4CAAC,cAAc;wCAAM;wCAAG,WAAU;;0DACvE,qKAAC;gDAAE,OAAM;;;;;;4CAAmB;0DAAC,qKAAC;gDAAK,WAAU;0DAAc;;;;;;;;;;;;;;;;;;;;;;0CAIjE,qKAAC,oJAAG,CAAC,IAAI;gCAAC,OAAO;oCAAC,SAAS;gCAAM;0CAC/B,cAAA,qKAAC,oJAAG,CAAC,IAAI;oCAAC,MAAK;oCAA2C,QAAO;8CAC/D,cAAA,qKAAC;wCAAE,OAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ/B","debugId":null}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/TOTP-Tool/utilities/generate-base-32-key.js"],"sourcesContent":["\nexport function GenerateBase32SecretKey() {\n    var randomstring = require(\"randomstring\");\n\n    const outputStr = randomstring.generate();\n\n    const base32 = require('hi-base32');\n    const encoded = base32.encode(outputStr)\n\n    return encoded\n}\n"],"names":[],"mappings":";;;;AACO,SAAS;IACZ,IAAI;IAEJ,MAAM,YAAY,aAAa,QAAQ;IAEvC,MAAM;IACN,MAAM,UAAU,OAAO,MAAM,CAAC;IAE9B,OAAO;AACX","debugId":null}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/TOTP-Tool/utilities/base32-utilities.js"],"sourcesContent":["const Long = require(\"long\");\n\nconst base32 = require('base32.js');\n\nexport function fixBase32Padding(input) {\n    const noPadding = input.replace(/=+$/, '');\n    const paddingNeeded = (8 - (noPadding.length % 8)) % 8;\n    return noPadding + '='.repeat(paddingNeeded);\n}\n\nexport function encodeLongLongInt(valueStr) {\n    const longVal = Long.fromString(valueStr); // Supports large integers\n    const bytes = longVal.toBytesBE(); // Big-endian byte array (8 bytes)\n\n    return Uint8Array.from(bytes);\n}\n\nfunction decodeBase32ToArrayBuffer(base32Str) {\n    const decoder = new base32.Decoder();\n    const uint8Array = decoder.write(base32Str).finalize();\n\n\n    const newArrayBuffer = new Uint8Array(uint8Array).buffer\n\n    console.log('UINT8')\n    console.log(uint8Array)\n    console.log(typeof uint8Array)\n    console.log('Buffer')\n    console.log(newArrayBuffer)\n    // Convert Uint8Array to ArrayBuffer\n\n    return newArrayBuffer\n}"],"names":[],"mappings":";;;;;;AAAA,MAAM;AAEN,MAAM;AAEC,SAAS,iBAAiB,KAAK;IAClC,MAAM,YAAY,MAAM,OAAO,CAAC,OAAO;IACvC,MAAM,gBAAgB,CAAC,IAAK,UAAU,MAAM,GAAG,CAAE,IAAI;IACrD,OAAO,YAAY,IAAI,MAAM,CAAC;AAClC;AAEO,SAAS,kBAAkB,QAAQ;IACtC,MAAM,UAAU,KAAK,UAAU,CAAC,WAAW,0BAA0B;IACrE,MAAM,QAAQ,QAAQ,SAAS,IAAI,kCAAkC;IAErE,OAAO,WAAW,IAAI,CAAC;AAC3B;AAEA,SAAS,0BAA0B,SAAS;IACxC,MAAM,UAAU,IAAI,OAAO,OAAO;IAClC,MAAM,aAAa,QAAQ,KAAK,CAAC,WAAW,QAAQ;IAGpD,MAAM,iBAAiB,IAAI,WAAW,YAAY,MAAM;IAExD,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC,OAAO;IACnB,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC;IACZ,oCAAoC;IAEpC,OAAO;AACX","debugId":null}},
    {"offset": {"line": 614, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/WebAuthn-Tool/utilities/base64.js"],"sourcesContent":["export var Base64Binary = {\n\t_keyStr : \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n\t\n\t/* will return a  Uint8Array type */\n\tdecodeArrayBuffer: function(input) {\n\t\tvar bytes = (input.length/4) * 3;\n\t\tvar ab = new ArrayBuffer(bytes);\n\t\tthis.decode(input, ab);\n\t\t\n\t\treturn ab;\n\t},\n\n\tremovePaddingChars: function(input){\n\t\tvar lkey = this._keyStr.indexOf(input.charAt(input.length - 1));\n\t\tif(lkey == 64){\n\t\t\treturn input.substring(0,input.length - 1);\n\t\t}\n\t\treturn input;\n\t},\n\n\tdecode: function (input, arrayBuffer) {\n\t\t//get last chars to see if are valid\n\t\tinput = this.removePaddingChars(input);\n\t\tinput = this.removePaddingChars(input);\n\n\t\tvar bytes = parseInt((input.length / 4) * 3, 10);\n\t\t\n\t\tvar uarray;\n\t\tvar chr1, chr2, chr3;\n\t\tvar enc1, enc2, enc3, enc4;\n\t\tvar i = 0;\n\t\tvar j = 0;\n\t\t\n\t\tif (arrayBuffer)\n\t\t\tuarray = new Uint8Array(arrayBuffer);\n\t\telse\n\t\t\tuarray = new Uint8Array(bytes);\n\t\t\n\t\tinput = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\t\t\n\t\tfor (i=0; i<bytes; i+=3) {\t\n\t\t\t//get the 3 octects in 4 ascii chars\n\t\t\tenc1 = this._keyStr.indexOf(input.charAt(j++));\n\t\t\tenc2 = this._keyStr.indexOf(input.charAt(j++));\n\t\t\tenc3 = this._keyStr.indexOf(input.charAt(j++));\n\t\t\tenc4 = this._keyStr.indexOf(input.charAt(j++));\n\t\n\t\t\tchr1 = (enc1 << 2) | (enc2 >> 4);\n\t\t\tchr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n\t\t\tchr3 = ((enc3 & 3) << 6) | enc4;\n\t\n\t\t\tuarray[i] = chr1;\t\t\t\n\t\t\tif (enc3 != 64) uarray[i+1] = chr2;\n\t\t\tif (enc4 != 64) uarray[i+2] = chr3;\n\t\t}\n\t\n\t\treturn uarray;\t\n\t}\n}\n\nexport function arrayBufferToBase64( buffer ) {\n    var binary = '';\n    var bytes = new Uint8Array( buffer );\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n        binary += String.fromCharCode( bytes[ i ] );\n    }\n    return window.btoa( binary );\n}\n\n\nexport function GenerateBase64SecretKey() {\n    var randomstring = require(\"randomstring\");\n\n    const outputStr = randomstring.generate();\n\n    const base32 = require('hi-base64');\n    let encoded = base32.encode(outputStr, false, 'rfc_4648_url_safe')\n\n    encoded = encoded.replace('=', '')\n\n    return encoded\n}\n"],"names":[],"mappings":";;;;;;;;AAAO,IAAI,eAAe;IACzB,SAAU;IAEV,kCAAkC,GAClC,mBAAmB,SAAS,KAAK;QAChC,IAAI,QAAQ,AAAC,MAAM,MAAM,GAAC,IAAK;QAC/B,IAAI,KAAK,IAAI,YAAY;QACzB,IAAI,CAAC,MAAM,CAAC,OAAO;QAEnB,OAAO;IACR;IAEA,oBAAoB,SAAS,KAAK;QACjC,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,MAAM,CAAC,MAAM,MAAM,GAAG;QAC5D,IAAG,QAAQ,IAAG;YACb,OAAO,MAAM,SAAS,CAAC,GAAE,MAAM,MAAM,GAAG;QACzC;QACA,OAAO;IACR;IAEA,QAAQ,SAAU,KAAK,EAAE,WAAW;QACnC,oCAAoC;QACpC,QAAQ,IAAI,CAAC,kBAAkB,CAAC;QAChC,QAAQ,IAAI,CAAC,kBAAkB,CAAC;QAEhC,IAAI,QAAQ,SAAS,AAAC,MAAM,MAAM,GAAG,IAAK,GAAG;QAE7C,IAAI;QACJ,IAAI,MAAM,MAAM;QAChB,IAAI,MAAM,MAAM,MAAM;QACtB,IAAI,IAAI;QACR,IAAI,IAAI;QAER,IAAI,aACH,SAAS,IAAI,WAAW;aAExB,SAAS,IAAI,WAAW;QAEzB,QAAQ,MAAM,OAAO,CAAC,uBAAuB;QAE7C,IAAK,IAAE,GAAG,IAAE,OAAO,KAAG,EAAG;YACxB,oCAAoC;YACpC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,MAAM,CAAC;YACzC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,MAAM,CAAC;YACzC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,MAAM,CAAC;YACzC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,MAAM,CAAC;YAEzC,OAAO,AAAC,QAAQ,IAAM,QAAQ;YAC9B,OAAO,AAAC,CAAC,OAAO,EAAE,KAAK,IAAM,QAAQ;YACrC,OAAO,AAAC,CAAC,OAAO,CAAC,KAAK,IAAK;YAE3B,MAAM,CAAC,EAAE,GAAG;YACZ,IAAI,QAAQ,IAAI,MAAM,CAAC,IAAE,EAAE,GAAG;YAC9B,IAAI,QAAQ,IAAI,MAAM,CAAC,IAAE,EAAE,GAAG;QAC/B;QAEA,OAAO;IACR;AACD;AAEO,SAAS,oBAAqB,MAAM;IACvC,IAAI,SAAS;IACb,IAAI,QAAQ,IAAI,WAAY;IAC5B,IAAI,MAAM,MAAM,UAAU;IAC1B,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;QAC1B,UAAU,OAAO,YAAY,CAAE,KAAK,CAAE,EAAG;IAC7C;IACA,OAAO,OAAO,IAAI,CAAE;AACxB;AAGO,SAAS;IACZ,IAAI;IAEJ,MAAM,YAAY,aAAa,QAAQ;IAEvC,MAAM;IACN,IAAI,UAAU,OAAO,MAAM,CAAC,WAAW,OAAO;IAE9C,UAAU,QAAQ,OAAO,CAAC,KAAK;IAE/B,OAAO;AACX","debugId":null}},
    {"offset": {"line": 693, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/TOTP-Tool/utilities/hmac-sha1.js"],"sourcesContent":["import { fixBase32Padding, encodeLongLongInt } from './base32-utilities';\n\nconst base32Decode = require('base32-decode')\n\nexport async function hmacSha1(key, countInt) {\n    const paddedKey = fixBase32Padding(key)\n    const keyRawBytes = base32Decode(paddedKey, 'RFC4648')\n    \n    // Import the secret key\n    const cryptoKey = await crypto.subtle.importKey(\n        'raw', \n        keyRawBytes, \n        { name: 'HMAC', hash: 'SHA-1' }, \n        false, \n        ['sign']\n    );\n    \n    // Sign the message using the key\n    const signature = await crypto.subtle.sign(\n        'HMAC', \n        cryptoKey, \n        encodeLongLongInt(String(countInt))\n    );\n    \n    // Convert ArrayBuffer to hex string\n    const hashArray = Array.from(new Uint8Array(signature));\n    \n    return hashArray;\n}"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AAEC,eAAe,SAAS,GAAG,EAAE,QAAQ;IACxC,MAAM,YAAY,IAAA,2KAAgB,EAAC;IACnC,MAAM,cAAc,aAAa,WAAW;IAE5C,wBAAwB;IACxB,MAAM,YAAY,MAAM,OAAO,MAAM,CAAC,SAAS,CAC3C,OACA,aACA;QAAE,MAAM;QAAQ,MAAM;IAAQ,GAC9B,OACA;QAAC;KAAO;IAGZ,iCAAiC;IACjC,MAAM,YAAY,MAAM,OAAO,MAAM,CAAC,IAAI,CACtC,QACA,WACA,IAAA,4KAAiB,EAAC,OAAO;IAG7B,oCAAoC;IACpC,MAAM,YAAY,MAAM,IAAI,CAAC,IAAI,WAAW;IAE5C,OAAO;AACX","debugId":null}},
    {"offset": {"line": 720, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/TOTP-Tool/utilities/byte-bit-rendering.js"],"sourcesContent":["export function RenderBits(number) {\n        const binaryString = number.toString(2).padStart(8, '0');\n        const bits = binaryString.split('');\n\n        return (\n            <div style={{ display: 'flex', gap: '2px' }}>\n            {bits.map((bit, index) => (\n                <div\n                key={index}\n                style={{\n                    border: '1px solid black',\n                    padding: '0px',\n                    width: '20px',\n                    textAlign: 'center',\n                    fontFamily: 'monospace'\n                }}\n                >\n                {bit}\n                </div>\n            ))}\n            </div>\n        );\n\n}\n\nexport function RenderBytes(byteUint8Array) {\n    const byteArray = Array.from(byteUint8Array)\n\n    return (\n        <div className=\"bytesTable\" style={{ display: 'flex', gap: '2px' }}>\n        {byteArray.map((bit, index) => (\n            <div\n            key={index}\n            style={{\n                border: '1px solid black',\n                padding: '0px',\n                width: '50px',\n                textAlign: 'center',\n                fontFamily: 'monospace'\n            }}\n            >\n            {bit}\n            </div>\n        ))}\n        </div>\n    );\n\n}"],"names":[],"mappings":";;;;;;;;AAAO,SAAS,WAAW,MAAM;IACzB,MAAM,eAAe,OAAO,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG;IACpD,MAAM,OAAO,aAAa,KAAK,CAAC;IAEhC,qBACI,qKAAC;QAAI,OAAO;YAAE,SAAS;YAAQ,KAAK;QAAM;kBACzC,KAAK,GAAG,CAAC,CAAC,KAAK,sBACZ,qKAAC;gBAED,OAAO;oBACH,QAAQ;oBACR,SAAS;oBACT,OAAO;oBACP,WAAW;oBACX,YAAY;gBAChB;0BAEC;eATI;;;;;;;;;;AAerB;AAEO,SAAS,YAAY,cAAc;IACtC,MAAM,YAAY,MAAM,IAAI,CAAC;IAE7B,qBACI,qKAAC;QAAI,WAAU;QAAa,OAAO;YAAE,SAAS;YAAQ,KAAK;QAAM;kBAChE,UAAU,GAAG,CAAC,CAAC,KAAK,sBACjB,qKAAC;gBAED,OAAO;oBACH,QAAQ;oBACR,SAAS;oBACT,OAAO;oBACP,WAAW;oBACX,YAAY;gBAChB;0BAEC;eATI;;;;;;;;;;AAejB","debugId":null}},
    {"offset": {"line": 788, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/TOTP-Tool/utilities/interval-more-details.js"],"sourcesContent":["import { arrayBufferToBase64 } from '../../WebAuthn-Tool/utilities/base64';\n\nimport { RenderBits, RenderBytes } from './byte-bit-rendering';\n\nimport Accordion from 'react-bootstrap/Accordion';\n\nexport function RenderIntervalMoreDetails(item) {\n    return (\n        <>\n            <div>\n\n                <h4>Part 1: Calculate Hop Count</h4>\n                <p>Calculate the number of 30 second intervals (hops) since <b>Epoch Time</b> (midnight Jan 1, 1970 UTC) to <b>{item.name}</b>.</p>\n                \n                <span><b>Time ({item.name}):</b> {item.strTime}</span><br/>\n\n                <span><b>Time since Epoch:</b> {(item.epochTime / 1000)} seconds</span><br/>\n\n                <b>Hop Count</b> = Time Since Epoch / 30 seconds <br/> \n                            = {(item.epochTime / 1000)} seconds / 30 seconds <br/>\n                            = {item.hopCount}\n                <br/>\n                <br/>\n                <h4>Part 2: HMAC-SHA1 Hash</h4>\n                <p>Calculate the HMAC-SHA1 hash of the <b>Hop Count</b> using the <b>Secret Key</b>.</p>\n                <b>Hop Count: </b> {item.hopCount}<br/>\n                <b>Secret Key: </b> {item.secretKey}<br/>\n                <br/>\n                <b>HMAC-SHA1 Hash (Base64):</b> HMAC-SHA1(Secret Key, Hop Count) <br/>\n                = {arrayBufferToBase64(item.hmacSig)} <br/>\n                <br/>\n                {RenderBytes(item.hmacSig)}\n                <br/>\n                <h4>Part 3: Calculate Offset</h4>\n                <p>Offset is the <b>last 4 bits of the above HMAC-SHA1 hash.</b></p>\n                <b>Last Byte of HMAC-SHA1:</b> {item.lastByte}   {RenderBits(item.lastByte)}\n                <br/>\n                <b>Offset:</b> Extract last 4 bits of last byte<br/>\n                = Last Byte & 0x0F<br/> \n                = {item.lastByte} & 0x0F<br/> \n                = {item.offset}       <br/>\n                {RenderBits(item.offset)}\n                <br/>\n                <br/>\n\n                <h4>Part 4: Truncated Hash</h4>\n                <p>Truncated Hash is a 4 byte extraction of the HMAC-SHA1 hash starting from the Offset index.</p>\n\n                Full HMAC-SHA1 Hash (Byte Array):\n                {RenderBytes(item.hmacSig)}\n                <br/>\n                Truncated Hash = SHA1-Hash[Offset: (Offset + 4)] <br/>\n                                = SHA1-Hash[{item.offset} : ({item.offset} + 4)] <br/>\n                                = SHA1-Hash[{item.offset} : {item.offset + 4}] <br/>\n                                {RenderBytes(item.truncatedBytes)}\n                <br/>\n                <br/>\n                <h4>Part 5: Long TOTP Code</h4>\n                <p>Long TOTP code calculated by representing the <b>4-byte Truncated Hash</b> as a single <b>Unsigned 32-bit Integer</b>.</p>\n                {RenderBytes(item.truncatedBytes)}\n\n                <b>Long TOTP Code:</b> {item.longTOTPCode}<br/>\n\n                <br/>\n                <br/>\n\n                <h4>Part 6: Short TOTP Code</h4>\n                <p>Extract only the last 6 digits for standard TOTP authenticator format.</p>\n\n                <b>Short TOTP Code:</b> {item.shortTOTPCodeFormatted} <br/>\n            </div>\n        </>\n    )\n}\n\nexport function RenderIntervals(TOTPList) {\n    return (\n        TOTPList.map((item) => (\n            <>\n                <Accordion.Item class=\"interval-item\" id={\"interval-id\" + item.id} eventKey={item.id}>\n                    <Accordion.Header><div style={{display: 'flex', flexDirection: 'row', gap: '15px'}}><div style={{border: '1px solid #000', borderRadius: '5px', width: '75px', paddingLeft: 'auto', paddingRight: 'auto'}}><i class=\"bi bi-clock\"></i> {item.name}</div><div><b>{item.shortTOTPCodeFormatted.slice(0, 3)} {item.shortTOTPCodeFormatted.slice(3, 6)}</b></div></div></Accordion.Header>\n                    <Accordion.Body>\n                        {RenderIntervalMoreDetails(item)}\n                    </Accordion.Body>\n                </Accordion.Item>\n            </>\n        ))\n    )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1346, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/TOTP-Tool/TOTP-Tool.js"],"sourcesContent":["import {Button, Container, Modal} from 'react-bootstrap';\n\nimport Accordion from 'react-bootstrap/Accordion';\n\nimport { GenerateBase32SecretKey } from './utilities/generate-base-32-key';\nimport { useState, useEffect, useRef } from 'react';\n\nimport { fixBase32Padding, encodeLongLongInt } from './utilities/base32-utilities';\n\nimport { arrayBufferToBase64 } from '../WebAuthn-Tool/utilities/base64';\n\nimport { hmacSha1 } from './utilities/hmac-sha1';\n\nimport { RenderIntervalMoreDetails, RenderIntervals } from './utilities/interval-more-details';\n\n\n\n//const base32Decode = require('base32-decode')\nimport * as base32Decode from 'base32-decode';\nimport * as QRCode from 'qrcode';\n\n\nexport default function TOTPTool() {\n    const [secretKeyValue, setSecretKey] = useState(GenerateBase32SecretKey());\n\n    const [QRImgValue, setQRImgValue] = useState('bbb');\n\n    const [QRTextValue, setQRTextValue] = useState('bbb');\n\n    const [currTimeValue, setCurrTimeValue] = useState(new Date())\n\n    const [currTimeStr, setCurrTimeStr] = useState(currTimeValue.toUTCString())\n\n    const [currTimeEpoch, setCurrTimeEpoch] = useState(new Date().toUTCString())\n\n    const [openIntervalTabNo, setOpenIntervalTabNo] = useState(-1)\n\n    const [providerName, setProviderName] = useState('AuthFuture')\n\n    const [QRUsername, setQRUsername] = useState('random@random.com')\n\n    const [QRDetailsModalShow, setQRDetailsModalShow] = useState(false);\n\n    const [showTOTPErrorBox, setShowTOTPErrorBox] = useState(false)\n\n    const [tempSecretKey, setTempSecretKey] = useState(secretKeyValue)\n\n    const secretKeyRef = useRef(secretKeyValue);\n\n    const [TOTPList, setTOTPList] = useState([])\n\n\n    useEffect(() => {\n        secretKeyRef.current = secretKeyValue\n        updateTOTPCalculation()\n    }, [])\n\n    //Updates both QR Image and Text\n    function updateQRTextImage() {\n        let qrCodeLabel = 'AuthFuture';\n        let qrCodeEmail = \"username\";\n        let qrCodeSecret = secretKeyValue;  \n        let qrCodeDigits = 6;\n        let qrCodePeriod = 30;\n        let qrCodeStr = 'otpauth://totp/' + providerName + ':' + QRUsername + '?secret=' + qrCodeSecret + '&issuer=' + qrCodeLabel + '&digits=' + qrCodeDigits + '&period=' + qrCodePeriod;\n        \n        setQRTextValue(qrCodeStr)\n\n        //const QRCode = require('qrcode');\n\n        QRCode.toDataURL(qrCodeStr, {\n                errorCorrectionLevel: 'H',\n                type: 'image/png'\n            },\n            function(err, url) {\n                if (err) throw err;\n                setQRImgValue(url);\n            }\n        );\n    }\n\n    useEffect(() => {\n        secretKeyRef.current = secretKeyValue\n        updateQRTextImage();\n        updateTOTPCalculation();\n    }, [secretKeyValue, QRUsername, providerName])\n    \n    function clickGenerateSecretKey() {\n        const randomKey = GenerateBase32SecretKey()\n\n        setSecretKey(randomKey)\n\n        setShowTOTPErrorBox(false)\n        setTempSecretKey(randomKey)\n\n    }\n\n\n    function handleNewKey(key) {\n        console.log('-------------------------ERROR----------------')\n        setTempSecretKey(key)\n        console.log('RAN6')\n        console.log(key)\n        try {\n\n            const decodedArray = base32Decode(fixBase32Padding(key), 'RFC4648')\n\n            if (decodedArray.byteLength !== 0) {\n                setShowTOTPErrorBox(false)\n                setSecretKey(key)\n            } else {\n                setShowTOTPErrorBox(true)\n                return\n            }\n        } catch (error) {\n\n            setShowTOTPErrorBox(true)\n            return\n        }\n\n        \n    }\n    //-------------------------------------------------------------------------\n    //INTERVAL \n    \n    // Executes every 30 seconds\n    useEffect(() => {\n        const interval = setInterval(() => {\n            //secretKeyRef.current = secretKeyValue\n            updateTOTPCalculation();\n        }, 30000);\n      \n        return () => clearInterval(interval);\n      }, []);\n    \n    \n\n    \n\n    \n\n    \n\n\n    async function updateTOTPCalculation() {\n        //Update global time\n        const timeEpoch = Date.now()\n        setCurrTimeEpoch(new Date(timeEpoch).toUTCString());\n\n        let TOTPListNew = []\n\n        const TOTPTimeOffsets = [-90, -60, -30, 0, 30, 60, 90]\n\n        for (let idx=0; idx <= 6; idx++) {\n            const item = TOTPTimeOffsets[idx]\n\n            let name = \"\"\n            if (TOTPTimeOffsets[idx] < 0) {\n                name = 'T' + parseInt(item) + 's'\n            } else if (TOTPTimeOffsets[idx] > 0) {\n                name = 'T+' + parseInt(item) + 's'\n            } else {\n                name = 'Now'\n            }\n            //Step 0 Initialisation\n            TOTPListNew.push({\n                'id': idx,\n                'name': name,\n                'timeOffset': item,\n                'epochTime': timeEpoch + (item * 1000),\n                'strTime': '',\n                'hopCount': 0,\n                'hmacSig': null,\n                'offset': null,\n                'lastByte': null,\n                'asciiHash': null,\n                'truncatedHashAscii': null,\n                'truncatedByte1': null,\n                'truncatedByte2': null,\n                'truncatedByte3': null,\n                'truncatedByte4': null,\n                'truncatedHash': null,\n                'truncatedBytes': null,\n                'longTOTPCode': null,\n                'shortTOTPCode': 111111,\n                'shortTOTPCodeFormatted': \"111111\",\n                \"secretKey\": secretKeyValue\n            })\n\n            //Step 1 & Step 2: Update Time for Item\n            TOTPListNew[idx].strTime = new Date(TOTPListNew[idx].epochTime).toUTCString()\n\n            //Step 3: Update Hop Count\n            TOTPListNew[idx].hopCount = parseInt((TOTPListNew[idx].epochTime / 1000) / 30)\n\n            //Step 4: Encode hop count as long long int\n            \n\n\n            //Step 5: HMAC Hash    \n            \n            TOTPListNew[idx].hmacSig = await hmacSha1(secretKeyRef.current, TOTPListNew[idx].hopCount)\n\n            //const asciiHash = atob(arrayBufferToBase64(hmacSig));\n            TOTPListNew[idx].asciiHash = atob(arrayBufferToBase64(TOTPListNew[idx].hmacSig));\n\n            // Get last character (each char = 1 byte)\n            //const lastByte = asciiHash[asciiHash.length - 1].charCodeAt(0);\n            TOTPListNew[idx].lastByte = TOTPListNew[idx].asciiHash[TOTPListNew[idx].asciiHash.length - 1].charCodeAt(0);\n\n            // Convert char to byte value (0–255)\n            console.log('LastByte')\n            console.log(TOTPListNew[idx].lastByte)\n\n            //const offset = lastByte & 0x0F\n            TOTPListNew[idx].offset = TOTPListNew[idx].lastByte & 0x0F\n\n            console.log('Offset')\n            console.log(TOTPListNew[idx].offset)\n\n            TOTPListNew[idx].truncatedHash = TOTPListNew[idx].hmacSig.slice(TOTPListNew[idx].offset, (TOTPListNew[idx].offset + 4))\n\n            console.log('Truncated Hash')\n            console.log(TOTPListNew[idx].truncatedHash)\n\n\n            //Long Code\n\n            TOTPListNew[idx].truncatedBytes = new Uint8Array(TOTPListNew[idx].truncatedHash)\n\n            console.log('Truncated Bytes')\n            console.log(TOTPListNew[idx].truncatedBytes)\n\n            const dataView = new DataView(TOTPListNew[idx].truncatedBytes.buffer, TOTPListNew[idx].truncatedBytes.byteOffset, TOTPListNew[idx].truncatedBytes.byteLength);\n            let code = dataView.getUint32(0, false); \n            TOTPListNew[idx].longTOTPCode = code & 0x7FFFFFFF;\n\n            console.log('Long Code')\n            console.log(TOTPListNew[idx].longTOTPCode)\n\n            TOTPListNew[idx].shortTOTPCode  = TOTPListNew[idx].longTOTPCode % (10 ** 6)\n\n            console.log('Short Code')\n            console.log(TOTPListNew[idx].shortTOTPCode )\n\n\n            TOTPListNew[idx].shortTOTPCodeFormatted = String(TOTPListNew[idx].shortTOTPCode).padStart(6, '0');\n        \n        }\n        \n        \n        setTOTPList(TOTPListNew)\n\n    }\n\n    \n\n    function QRCodeModal() {\n        return (\n            <>\n                <Modal show={QRDetailsModalShow} onHide={(event) => {setQRDetailsModalShow(false)}}>\n                    <Modal.Header closeButton>\n                    <Modal.Title>QR Code Content</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body style={{textWrap: 'wrap', textWrapStyle: 'pretty', overflowWrap:'break-word'}}><div><p>{QRTextValue}</p></div></Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n\n    //-------------------------------------------------------------------------\n    // RENDERING SECTION\n\n    return (\n        <>\n            <section style={{backgroundColor: '#2a2a2a', paddingTop:'20px', paddingBottom: '20px'}} className=\"text-white\" id=\"totp-section\">\n                <Container>\n                    <link rel=\"stylesheet\" href=\"/css/totp-tool.css\"></link>\n                    <h2>Time-Based One Time Passwords</h2>\n                \n                    <div id=\"totp-tool-container\">\n                        <div id=\"generating-qr-code\" style={{paddingTop: '10px', paddingBottom: '30px'}}>\n                            <h3><i class=\"bi bi-sliders\"></i> Configuration</h3>\n\n                            \n\n                            <div id=\"otp-secret\" style={{gap: '20px'}}>\n                                <div id=\"qr-code\">\n                                    <div id=\"otp-qr-code\">\n                                        <img src={QRImgValue} width=\"100%\" height=\"100%\"></img>\n                                    </div>\n                                    <div style={{textAlign: 'center', paddingTop: '5px'}}>\n                                        <Button variant=\"outline-light\" onClick={(event) => {setQRDetailsModalShow(true)}}><i class=\"bi bi-plus\"></i>QR Code Content</Button>\n                                    </div>\n                                    {QRCodeModal()}\n                                </div>\n                                <div id=\"key-section\" style={{width: '100%'}}>\n                                    <div className=\"totp-qr-name section-row py-2\">\n                                        <label><b>Issuer:</b></label>\n                                        <input type=\"text\" className=\"bg-white text-black\" value={providerName} onChange={(event) => {setProviderName(event.target.value)}}></input>\n                                    </div>\n                                    <div className=\"totp-qr-username section-row py-2\">\n                                        <label><b>Username:</b></label>\n                                        <input type=\"text\" className=\"bg-white text-black\" value={QRUsername} onChange={(event) => {setQRUsername(event.target.value)}}></input>\n                                    </div>\n                                    <div className=\"secret-key-text section-row py-2\">\n                                        <label><b>Secret Key:</b></label>\n                                        <span id=\"otp-secret-code\"><input type=\"text\" className=\"bg-white text-black\" value={tempSecretKey} onChange={(event) => {handleNewKey(event.target.value)}}></input></span>\n                                    </div>\n                                    {showTOTPErrorBox && (\n                                        <div class=\"alert alert-danger alert-dismissible fade show mt-3 errorBox\" role=\"alert\" style={{paddingTop: '0px', paddingBottom: '5px'}}>\n                                            <span class=\"errorMessage\" style={{fontSize: '16px'}}><b>Invalid Secret Key: </b> Secret Key must be in Base 32 format</span>\n                                        </div>\n                                    )}\n                                    <div id=\"key-update-buttons\">\n                                        <Button variant=\"light\" onClick={clickGenerateSecretKey}><i class=\"bi bi-arrow-repeat\"></i> Generate</Button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div id=\"totp-calculator\">\n                            <h3>Valid Codes</h3>\n                            <div>\n                                <div>\n                                    <span><i class=\"bi bi-clock\"></i> {currTimeEpoch} (UTC)</span>\n                                </div>\n                                <div>\n                                    <Accordion>\n                                        {RenderIntervals(TOTPList)}\n                                    </Accordion>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                </Container>\n            </section>\n        </>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2018, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/WebAuthn-Tool/utilities/generate-base-32-key.js"],"sourcesContent":["export function GenerateBase32SecretKey() {\n    var randomstring = require(\"randomstring\");\n\n    const outputStr = randomstring.generate();\n\n    const base32 = require('hi-base32');\n    const encoded = base32.encode(outputStr)\n\n    return encoded\n}\n\n\n\n\n\n\n"],"names":[],"mappings":";;;;AAAO,SAAS;IACZ,IAAI;IAEJ,MAAM,YAAY,aAAa,QAAQ;IAEvC,MAAM;IACN,MAAM,UAAU,OAAO,MAAM,CAAC;IAE9B,OAAO;AACX","debugId":null}},
    {"offset": {"line": 2033, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/WebAuthn-Tool/utilities/concat-array-buffers.js"],"sourcesContent":["import { arrayBufferToBase64 } from \"./base64\";\n\nexport function concatArrayBuffers(buffer1, buffer2) {\n    const totalLength = buffer1.byteLength + buffer2.byteLength;\n    const result = new Uint8Array(totalLength);\n    result.set(new Uint8Array(buffer1), 0);\n    result.set(new Uint8Array(buffer2), buffer1.byteLength);\n    return arrayBufferToBase64(result.buffer);\n}"],"names":[],"mappings":";;;;AAAA;;AAEO,SAAS,mBAAmB,OAAO,EAAE,OAAO;IAC/C,MAAM,cAAc,QAAQ,UAAU,GAAG,QAAQ,UAAU;IAC3D,MAAM,SAAS,IAAI,WAAW;IAC9B,OAAO,GAAG,CAAC,IAAI,WAAW,UAAU;IACpC,OAAO,GAAG,CAAC,IAAI,WAAW,UAAU,QAAQ,UAAU;IACtD,OAAO,IAAA,qKAAmB,EAAC,OAAO,MAAM;AAC5C","debugId":null}},
    {"offset": {"line": 2062, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/WebAuthn-Tool/utilities/WebAuthnGraph.js"],"sourcesContent":["import ReactFlow, { ReactFlowProvider, Handle, Position }  from 'reactflow';\n\nimport {Button, Container, Modal, ButtonGroup} from 'react-bootstrap';\n\nimport { useState, useRef, useEffect } from 'react';\n\n\n\n\nconst CustomNode = ({ data }) => {\n    const handles = Array.isArray(data?.handles) ? data.handles : [];\n\n    return (\n        <div style={{ border: '0px solid ' + data.bgColor, borderRadius: '12px', width: '200px', height: data.height ? data.height : '100px', zIndex: 10, position: 'relative'}}>\n            {handles.map((handle, index) => (\n                <Handle\n                key={index}\n                type={handle.type}           // 'source' or 'target'\n                position={handle.position}   // e.g. Position.Top, Position.Bottom\n                id={handle.id}               // optional but useful for complex graphs\n                style={handle.style || {}}\n                />\n            ))}\n            <div style={{paddingLeft: 'auto', paddingRight: 'auto', opacity: 1, border: '3px solid rgb(155, 89, 182)', borderRadius: '10px', width: '100%', height: '100%'}}>\n                <div id=\"node-label\">\n                    <span style={{fontSize: '14px', color: '#FFF'}}><i class={data.icon ? data.icon : ''}></i> {data.label}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst PlatformNode = ({ data }) => {\n    return (\n        <div style={{ padding: 10, border: '1px solid rgb(17, 17, 17)', borderRadius: 5, color: '#FFF', background: 'rgb(17, 17, 17)', width: '1200px', height: '200px', zIndex: -1, position: 'relative' }}>\n            <div>\n                <span style={{fontSize: '20px'}}><i class={data.icon}></i> {data.platformName}</span>\n            </div>\n        </div>\n    );\n};\n\nexport function PasskeyExplanation() {\n    const [passkeyDiagramTab, setPasskeyDiagramTab] = useState(0)\n\n    function passkeyDiagram() {\n        \n        const nodeTypes = {\n            custom: CustomNode,\n            platform: PlatformNode\n        }\n\n        const registrationNodes = [\n        {\n            id: '0',\n            type: 'platform',\n            position: { x: 0, y: 0 },\n            data: { platformName: 'Server', icon: 'bi bi-hdd-stack-fill' },\n            sourcePosition: 'right',\n            targetPosition: 'left'\n        },\n        {\n            id: '1',\n            type: 'platform',\n            position: { x: 0, y: 250 },\n            data: { platformName: 'Browser', icon: 'bi bi-person-fill' },\n            sourcePosition: 'right',\n            targetPosition: 'left'\n        },\n        {\n            id: '2',\n            type: 'platform',\n            position: { x: 0, y: 500 },\n            data: { platformName: 'Authenticator', icon: 'bi bi-shield-fill-check' },\n            sourcePosition: 'right',\n            targetPosition: 'left'\n        },\n        {\n            id: '3',\n            type: 'custom',\n            position: { x: 175, y: 50 },\n            data: { id: '3', label: 'Credential Creation Options for Browser', icon: 'bi bi-1-circle', bgColor: 'rgb(155, 89, 182)',\n                handles: [\n                { type: 'target', position: Position.Left, id: 'input1' },\n                { type: 'source', position: Position.Bottom, id: 'output1' }\n                ]\n                },\n            sourcePosition: 'right',\n            targetPosition: 'left',\n            \n        },\n        {\n            id: '4',\n            type: 'custom',\n            position: { x: 500, y: 300 },\n            data: { label: 'Browser calls navigator.credentials.create()', icon: 'bi bi-2-circle', bgColor: 'rgb(155, 89, 182)',\n                handles: [\n                { type: 'target', position: Position.Left, id: 'input1' },\n                { type: 'source', position: Position.Right, id: 'output1' },\n                { type: 'source', position: Position.Bottom, id: 'output2' },\n                { type: 'target', position: Position.Bottom, id: 'input2' },\n                ]\n                },\n            sourcePosition: 'right',\n            targetPosition: 'left'\n        },\n        {\n            id: '5',\n            type: 'custom',\n            position: { x: 500, y: 550 },\n            data: { label: 'Create Key Pair', icon: 'bi bi-3-circle',\n                handles: [\n                { type: 'target', position: Position.Top, id: 'input1' },\n                { type: 'source', position: Position.Left, id: 'output1' }\n                ]\n                },\n            sourcePosition: 'up',\n            targetPosition: 'top'\n        },\n        {\n            id: '6',\n            type: 'custom',\n            position: { x: 975, y: 50 },\n            data: { label: 'Store Public Key', icon: 'bi bi-4-circle',\n                handles: [\n                { type: 'target', position: Position.Bottom, id: 'input1' },\n                { type: 'source', position: Position.Right, id: 'output1' }\n                ]\n                },\n            sourcePosition: 'right',\n            targetPosition: 'left'\n        }\n        ];\n\n        const registrationEdges = [\n        { id: 'e1-2', source: '3', target: '4', type: 'straight', markerEnd: {type: 'arrowclosed'}, style: { strokeWidth: 3, stroke: '#808080', zIndex: 10, borderWidth: '3px'}},\n        { id: 'e2-3', source: '4', target: '5', type: 'straight', sourceHandle: 'output2',  markerStart: {type: 'arrowclosed'}, markerEnd: {type: 'arrowclosed'}, style: { strokeWidth: 3, stroke: '#808080', zIndex: 10 }},\n        { id: 'e3-4', source: '4', target: '6', type: 'straight', markerEnd: {type: 'arrowclosed'}, style: { strokeWidth: 3, stroke: '#808080', zIndex: 10 } }\n        ];\n\n        const verificationNodes = [\n        {\n            id: '0',\n            type: 'platform',\n            position: { x: 0, y: 0 },\n            data: { platformName: 'Server', icon: 'bi bi-hdd-stack-fill' },\n            sourcePosition: 'right',\n            targetPosition: 'left'\n        },\n        {\n            id: '1',\n            type: 'platform',\n            position: { x: 0, y: 250 },\n            data: { platformName: 'Browser', icon: 'bi bi-person-fill' },\n            sourcePosition: 'right',\n            targetPosition: 'left'\n        },\n        {\n            id: '2',\n            type: 'platform',\n            position: { x: 0, y: 500 },\n            data: { platformName: 'Authenticator', icon: 'bi bi-shield-fill-check' },\n            sourcePosition: 'right',\n            targetPosition: 'left'\n        },\n        {\n            id: '3',\n            type: 'custom',\n            position: { x: 175, y: 30 },\n            data: { label: 'Server Generates Credential Verification Options', icon: 'bi bi-1-circle',\n                height: '140px',\n                handles: [\n                { type: 'target', position: Position.Left, id: 'input1' },\n                { type: 'source', position: Position.Bottom, id: 'output1' }\n                ]\n                },\n            sourcePosition: 'right',\n            targetPosition: 'left'\n        },\n        {\n            id: '4',\n            type: 'custom',\n            position: { x: 500, y: 300 },\n            data: { label: 'Browser Calls navigator.credentials.get()', icon: 'bi bi-2-circle',\n                handles: [\n                { type: 'target', position: Position.Left, id: 'input1' },\n                { type: 'source', position: Position.Right, id: 'output1' },\n                { type: 'source', position: Position.Bottom, id: 'output2' },\n                ]\n                },\n            sourcePosition: 'right',\n            targetPosition: 'left'\n        },\n        {\n            id: '5',\n            type: 'custom',\n            position: { x: 500, y: 550 },\n            data: { label: 'Local Authenticator Returns Assertion Signature', icon: 'bi bi-3-circle',\n                handles: [\n                { type: 'target', position: Position.Top, id: 'input1' },\n                { type: 'source', position: Position.Left, id: 'output1' }\n                ]\n                },\n            sourcePosition: 'right',\n            targetPosition: 'left'\n        },\n        {\n            id: '6',\n            type: 'custom',\n            position: { x: 750, y: 300 },\n            data: { label: 'Send Assertion Response to Server', icon: 'bi bi-4-circle',\n                handles: [\n                { type: 'target', position: Position.Left, id: 'input1' },\n                { type: 'source', position: Position.Right, id: 'output1' }\n                ]\n                },\n            sourcePosition: 'right',\n            targetPosition: 'left'\n        },\n        {\n            id: '7',\n            type: 'custom',\n            position: { x: 975, y: 30 },\n            data: { label: 'Validate Assertion Signature with Stored Public Key', icon: 'bi bi-5-circle',\n                height: '140px',\n                handles: [\n                { type: 'target', position: Position.Bottom, id: 'input1' },\n                { type: 'source', position: Position.Right, id: 'output1' }\n                ]\n                },\n            sourcePosition: 'right',\n            targetPosition: 'left'\n        }\n        ];\n\n        const verificationEdges = [\n        { id: 'e1-2', source: '1', target: '2', type: 'straight', markerEnd: {type: 'arrowclosed'}, style: { strokeWidth: 3, stroke: '#808080', zIndex: 10 }},\n        { id: 'e2-3', source: '2', target: '3', type: 'straight', markerEnd: {type: 'arrowclosed'}, style: { strokeWidth: 3, stroke: '#808080', zIndex: 10 } },\n        { id: 'e3-4', source: '3', target: '4', type: 'straight', markerEnd: {type: 'arrowclosed'}, style: { strokeWidth: 3, stroke: '#808080', zIndex: 10 } },\n        { id: 'e4-5', source: '4', target: '5', sourceHandle: 'output2', type: 'straight', markerStart: {type: 'arrowclosed'}, markerEnd: {type: 'arrowclosed'}, style: { strokeWidth: 3, stroke: '#808080', zIndex: 10 } },\n        { id: 'e4-6', source: '4', target: '6', type: 'straight', markerEnd: {type: 'arrowclosed'}, style: { strokeWidth: 3, stroke: '#808080', zIndex: 10 } },\n        { id: 'e6-7', source: '6', target: '7', type: 'straight', markerEnd: {type: 'arrowclosed'}, style: { strokeWidth: 3, stroke: '#808080', zIndex: 10 } },\n        ];\n\n        if (passkeyDiagramTab == 0) {\n            //Assertion (Registration)\n            return (\n                <>\n                    <ReactFlowProvider>\n                        <div style={{width: '100%', height: '750px'}}>\n                            <ReactFlow colorMode=\"dark\" nodes={registrationNodes} edges={registrationEdges} nodeTypes={nodeTypes}\n                            fitView\n                            zoomOnScroll={false}\n                            zoomOnPinch={false}\n                            panOnScroll={false}\n                            panOnDrag={false}\n                            nodesDraggable={false}\n                            nodesConnectable={false}\n                            elementsSelectable={false}\n                            preventScrolling={false} \n                            panOnScrollMode={null}/>\n                        </div>\n                    </ReactFlowProvider>\n                </>\n            )\n        } else {\n            //Assertation (Verification)\n            return (\n                <>\n                    <ReactFlowProvider>\n                        <div style={{width: '100%', height: '750px'}}>\n                            <ReactFlow nodes={verificationNodes} edges={verificationEdges} nodeTypes={nodeTypes} \n                            fitView\n                            zoomOnScroll={false}\n                            zoomOnPinch={false}\n                            panOnScroll={false}\n                            panOnDrag={false}\n                            nodesDraggable={false}\n                            nodesConnectable={false}\n                            elementsSelectable={false}\n                            preventScrolling={false} \n                            panOnScrollMode={null}\n                            />\n                        </div>\n                    </ReactFlowProvider>\n                </>\n            )\n        }\n    }\n    \n    return (\n        <>\n            <div style={{display: 'flex', flexDirection: 'column'}}>\n                <div>\n                    <p>Passkeys enable users to securely login to web apps using a local authenticator either as MFA or instead of a password.</p>\n                </div>\n                <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', width: '100%'}}> \n                    <ButtonGroup aria-label=\"Basic example\">\n                        <Button variant={passkeyDiagramTab == 0 ? 'dark' : 'outline-dark'} onClick={(event) => {setPasskeyDiagramTab(0)}}>Passkey Registration (Assertation)</Button>\n                        <Button variant={passkeyDiagramTab == 1 ? 'dark' : 'outline-dark'}  onClick={(event) => {setPasskeyDiagramTab(1)}}>Passkey Verification (Assertion)</Button>\n                    </ButtonGroup>\n                </div>\n                <div style={{width: '100%'}}>\n                    {passkeyDiagram()}\n                </div>\n            </div>\n        </>\n    )\n}\n\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2851, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/WebAuthn-Tool/utilities/list-registered-passkeys.js"],"sourcesContent":["import {Button, Container, Modal, ButtonGroup, Accordion} from 'react-bootstrap';\n\nfunction renderPasskeys(savedCredentials) {\n    return (\n        savedCredentials.map((item) => (\n            <>\n                <Accordion.Item class=\"webauthn-item\" id={\"webauthn-id\" + item.idNum} eventKey={item.idNum} style={{width: '100%'}}>\n                    <Accordion.Header><span>Passkey #{item.idNum}     <i>(ID: {item.id})</i> </span></Accordion.Header>\n                    <Accordion.Body style={{textWrap: 'wrap', textWrapStyle: 'pretty', overflowWrap:'break-word'}}>\n                        <span><b>Credential ID: </b> {item.id}</span><br/>\n\n                        <span><b>Public Key (Base 64): </b> </span><br/>\n\n                        <div style={{textWrap: 'wrap', textWrapStyle: 'pretty', overflowWrap:'break-word'}}>\n                            <p style={{textWrap: 'wrap', textWrapStyle: 'pretty', overflowWrap:'break-word'}}>{item.publicKey}</p>\n                        </div>\n\n                        <span><b>Algorithm:</b> {item.alg}</span><br/>\n\n                        <span><b>Transports: </b> {item.transports}</span><br/>\n\n                        {(item.transports == 'internal') ? <div className=\"alert alert-success\" role=\"alert\">Passkey may be used in passwordless mode</div> : <div className=\"alert alert-danger\" role=\"alert\"><b>External Authenticator:</b> Unable to be used in passwordless mode</div>}\n\n\n                    </Accordion.Body>\n                </Accordion.Item>\n            </>\n        ))\n    )\n}\n\nexport function RenderListRegisteredPasskeys(savedCredentials) {\n    if (savedCredentials.length == 0) {\n        return (\n            <>\n                <div style={{border: '1px solid #000', borderStyle: 'dashed', borderRadius: '10px', display: 'flex', justifyContent: 'center', alignItems: 'center', paddingTop: '50px', paddingBottom: '50px'}}>\n                    <span>No registered passkeys.</span>\n                </div>\n            </>\n        )\n    } else {\n        return (\n            <>\n                <div style={{border: '1px solid #000', borderStyle: 'dashed', borderRadius: '10px', display: 'flex', justifyContent: 'center', alignItems: 'center', paddingTop: '50px', paddingBottom: '50px'}}>\n                    <Accordion style={{maxWidth:'100%', width:'100%'}}>\n                        {renderPasskeys(savedCredentials)}\n                    </Accordion>\n                </div>\n            </>\n        )\n    }\n}"],"names":[],"mappings":";;;;;AAAA;;;AAEA,SAAS,eAAe,gBAAgB;IACpC,OACI,iBAAiB,GAAG,CAAC,CAAC,qBAClB;sBACI,cAAA,qKAAC,oMAAS,CAAC,IAAI;gBAAC,OAAM;gBAAgB,IAAI,gBAAgB,KAAK,KAAK;gBAAE,UAAU,KAAK,KAAK;gBAAE,OAAO;oBAAC,OAAO;gBAAM;;kCAC7G,qKAAC,oMAAS,CAAC,MAAM;kCAAC,cAAA,qKAAC;;gCAAK;gCAAU,KAAK,KAAK;gCAAC;8CAAK,qKAAC;;wCAAE;wCAAM,KAAK,EAAE;wCAAC;;;;;;;gCAAK;;;;;;;;;;;;kCACxE,qKAAC,oMAAS,CAAC,IAAI;wBAAC,OAAO;4BAAC,UAAU;4BAAQ,eAAe;4BAAU,cAAa;wBAAY;;0CACxF,qKAAC;;kDAAK,qKAAC;kDAAE;;;;;;oCAAmB;oCAAE,KAAK,EAAE;;;;;;;0CAAQ,qKAAC;;;;;0CAE9C,qKAAC;;kDAAK,qKAAC;kDAAE;;;;;;oCAA0B;;;;;;;0CAAQ,qKAAC;;;;;0CAE5C,qKAAC;gCAAI,OAAO;oCAAC,UAAU;oCAAQ,eAAe;oCAAU,cAAa;gCAAY;0CAC7E,cAAA,qKAAC;oCAAE,OAAO;wCAAC,UAAU;wCAAQ,eAAe;wCAAU,cAAa;oCAAY;8CAAI,KAAK,SAAS;;;;;;;;;;;0CAGrG,qKAAC;;kDAAK,qKAAC;kDAAE;;;;;;oCAAc;oCAAE,KAAK,GAAG;;;;;;;0CAAQ,qKAAC;;;;;0CAE1C,qKAAC;;kDAAK,qKAAC;kDAAE;;;;;;oCAAgB;oCAAE,KAAK,UAAU;;;;;;;0CAAQ,qKAAC;;;;;4BAEjD,KAAK,UAAU,IAAI,2BAAc,qKAAC;gCAAI,WAAU;gCAAsB,MAAK;0CAAQ;;;;;qDAAiD,qKAAC;gCAAI,WAAU;gCAAqB,MAAK;;kDAAQ,qKAAC;kDAAE;;;;;;oCAA2B;;;;;;;;;;;;;;;;;;;;AAQ7O;AAEO,SAAS,6BAA6B,gBAAgB;IACzD,IAAI,iBAAiB,MAAM,IAAI,GAAG;QAC9B,qBACI;sBACI,cAAA,qKAAC;gBAAI,OAAO;oBAAC,QAAQ;oBAAkB,aAAa;oBAAU,cAAc;oBAAQ,SAAS;oBAAQ,gBAAgB;oBAAU,YAAY;oBAAU,YAAY;oBAAQ,eAAe;gBAAM;0BAC1L,cAAA,qKAAC;8BAAK;;;;;;;;;;;;IAItB,OAAO;QACH,qBACI;sBACI,cAAA,qKAAC;gBAAI,OAAO;oBAAC,QAAQ;oBAAkB,aAAa;oBAAU,cAAc;oBAAQ,SAAS;oBAAQ,gBAAgB;oBAAU,YAAY;oBAAU,YAAY;oBAAQ,eAAe;gBAAM;0BAC1L,cAAA,qKAAC,oMAAS;oBAAC,OAAO;wBAAC,UAAS;wBAAQ,OAAM;oBAAM;8BAC3C,eAAe;;;;;;;;;;;;IAKpC;AACJ","debugId":null}},
    {"offset": {"line": 3118, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/WebAuthn-Tool/utilities/webauthn-verification-algos.js"],"sourcesContent":["\n\nexport async function verifyES256(publicKeyRaw, signatureRaw, authenticatorDataJSONRaw, setAssertionVerified) {\n    //Process Signature\n    var usignature = new Uint8Array(signatureRaw);\n    var rStart = usignature[4] === 0 ? 5 : 4;\n    var rEnd = rStart + 32;\n    var sStart = usignature[rEnd + 2] === 0 ? rEnd + 3 : rEnd + 2;\n    var r = usignature.slice(rStart, rEnd);\n    var s = usignature.slice(sStart);\n    var rawSignature = new Uint8Array([...r, ...s]);\n\n    let publicKeyECDSA = await crypto.subtle.importKey(\n        'spki', // Format of the key\n        publicKeyRaw, // ArrayBuffer from PEM\n        {\n            name: 'ECDSA',\n            namedCurve: 'P-256',\n            hash: { name: \"SHA-256\" }   //added\n        },\n        false, //true\n        ['verify']\n    );\n\n    let verified = await crypto.subtle.verify(\n            {\n                name: 'ECDSA',\n                namedCurve: \"P-256\", //added\n                hash: { name: 'SHA-256' }\n            },\n            publicKeyECDSA,\n            rawSignature, // Signature from authenticator\n            authenticatorDataJSONRaw // authData + SHA256(clientDataJSON)\n    );\n\n    console.log('Verified ECDSA');\n    console.log(verified);\n\n    if (verified) {\n        setAssertionVerified(true)\n    }\n\n\n}\n\nexport async function verifyRS256(publicKeyRaw, signatureRaw, authenticatorDataJSONRaw, setAssertionVerified) {\n    \n    let publicKeyRSA = await crypto.subtle.importKey(\n        'spki',                // Format of the key\n        publicKeyRaw,             // ArrayBuffer from PEM\n        {\n            name: 'RSASSA-PKCS1-v1_5',  // or 'RSA-PSS'\n            hash: { name: 'SHA-256' }\n        },\n        true,\n        ['verify']\n    );\n    let verified = await crypto.subtle.verify(\n        {\n            name: 'RSASSA-PKCS1-v1_5',\n            hash: { name: 'SHA-256' }\n        },\n        publicKeyRSA,\n        signatureRaw,       // Signature from authenticator\n        authenticatorDataJSONRaw      // authData + SHA256(clientDataJSON)\n        );\n    //console.log('Verified RSA')\n    //console.log(verified)\n\n    if (verified) {\n        setAssertionVerified(true)\n    }\n}"],"names":[],"mappings":";;;;;;AAEO,eAAe,YAAY,YAAY,EAAE,YAAY,EAAE,wBAAwB,EAAE,oBAAoB;IACxG,mBAAmB;IACnB,IAAI,aAAa,IAAI,WAAW;IAChC,IAAI,SAAS,UAAU,CAAC,EAAE,KAAK,IAAI,IAAI;IACvC,IAAI,OAAO,SAAS;IACpB,IAAI,SAAS,UAAU,CAAC,OAAO,EAAE,KAAK,IAAI,OAAO,IAAI,OAAO;IAC5D,IAAI,IAAI,WAAW,KAAK,CAAC,QAAQ;IACjC,IAAI,IAAI,WAAW,KAAK,CAAC;IACzB,IAAI,eAAe,IAAI,WAAW;WAAI;WAAM;KAAE;IAE9C,IAAI,iBAAiB,MAAM,OAAO,MAAM,CAAC,SAAS,CAC9C,QACA,cACA;QACI,MAAM;QACN,YAAY;QACZ,MAAM;YAAE,MAAM;QAAU,EAAI,OAAO;IACvC,GACA,OACA;QAAC;KAAS;IAGd,IAAI,WAAW,MAAM,OAAO,MAAM,CAAC,MAAM,CACjC;QACI,MAAM;QACN,YAAY;QACZ,MAAM;YAAE,MAAM;QAAU;IAC5B,GACA,gBACA,cACA,yBAAyB,oCAAoC;;IAGrE,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC;IAEZ,IAAI,UAAU;QACV,qBAAqB;IACzB;AAGJ;AAEO,eAAe,YAAY,YAAY,EAAE,YAAY,EAAE,wBAAwB,EAAE,oBAAoB;IAExG,IAAI,eAAe,MAAM,OAAO,MAAM,CAAC,SAAS,CAC5C,QACA,cACA;QACI,MAAM;QACN,MAAM;YAAE,MAAM;QAAU;IAC5B,GACA,MACA;QAAC;KAAS;IAEd,IAAI,WAAW,MAAM,OAAO,MAAM,CAAC,MAAM,CACrC;QACI,MAAM;QACN,MAAM;YAAE,MAAM;QAAU;IAC5B,GACA,cACA,cACA,yBAA8B,oCAAoC;;IAEtE,6BAA6B;IAC7B,uBAAuB;IAEvB,IAAI,UAAU;QACV,qBAAqB;IACzB;AACJ","debugId":null}},
    {"offset": {"line": 3185, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/WebAuthn-Tool/utilities/getter-functions.js"],"sourcesContent":["export function getAlgoDetails(id, savedCredentials) {\n    let output = {\n        'algoNum': -7,\n        'algoName': 'ES256'\n    }\n\n    savedCredentials.forEach((cred) => {\n        if (cred.id === id) {\n            output.algoNum = cred.alg\n            if (output.algoNum === -7) {\n                output.algoName = 'ES256'\n            } else if (output.algoNum === -257) {\n                output.algoName = 'RS256'\n            }\n        }\n    })\n\n    return output\n}\n\n\nexport function getCredentialArrayStr(savedCredentials) {\n    let creds = []\n\n    savedCredentials.forEach((cred) => {\n        creds.push({\n            'id': cred.id,\n            'type': 'public-key',\n            'transports': cred.transports\n        })\n    })\n\n    return JSON.stringify(creds, null, 20)\n}"],"names":[],"mappings":";;;;;;AAAO,SAAS,eAAe,EAAE,EAAE,gBAAgB;IAC/C,IAAI,SAAS;QACT,WAAW,CAAC;QACZ,YAAY;IAChB;IAEA,iBAAiB,OAAO,CAAC,CAAC;QACtB,IAAI,KAAK,EAAE,KAAK,IAAI;YAChB,OAAO,OAAO,GAAG,KAAK,GAAG;YACzB,IAAI,OAAO,OAAO,KAAK,CAAC,GAAG;gBACvB,OAAO,QAAQ,GAAG;YACtB,OAAO,IAAI,OAAO,OAAO,KAAK,CAAC,KAAK;gBAChC,OAAO,QAAQ,GAAG;YACtB;QACJ;IACJ;IAEA,OAAO;AACX;AAGO,SAAS,sBAAsB,gBAAgB;IAClD,IAAI,QAAQ,EAAE;IAEd,iBAAiB,OAAO,CAAC,CAAC;QACtB,MAAM,IAAI,CAAC;YACP,MAAM,KAAK,EAAE;YACb,QAAQ;YACR,cAAc,KAAK,UAAU;QACjC;IACJ;IAEA,OAAO,KAAK,SAAS,CAAC,OAAO,MAAM;AACvC","debugId":null}},
    {"offset": {"line": 3223, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/WebAuthn-Tool/utilities/verification-methods-code-string.js"],"sourcesContent":["import { getAlgoDetails } from \"./getter-functions\";\nimport { getCredentialArrayStr } from \"./getter-functions\";\n\nexport function renderLoginPublicKeyJSON(assertionData, savedCredentials) {\n    if (getAlgoDetails(assertionData.id, savedCredentials)['algoName'] == 'RS256') {\n        return `\n                    let publicKeyRSA = await crypto.subtle.importKey(\n                        'spki',                // Format of the key\n                        publicKeyRaw,             // ArrayBuffer from PEM\n                        {\n                            name: 'RSASSA-PKCS1-v1_5',  // or 'RSA-PSS'\n                            hash: { name: 'SHA-256' }\n                        },\n                        true,\n                        ['verify']\n                    );\n                    `\n    } else if (getAlgoDetails(assertionData.id, savedCredentials)['algoName'] == 'ES256') {\n        return `\n                    let publicKeyECDSA = await crypto.subtle.importKey(\n                        'spki', // Format of the key\n                        publicKeyRaw, // ArrayBuffer from PEM\n                        {\n                            name: 'ECDSA',\n                            namedCurve: 'P-256',\n                            hash: { name: \"SHA-256\" }   //added\n                        },\n                        false, //true\n                        ['verify']\n                    );\n                    `\n    }\n\n}\n\n\nexport function renderLoginVerifyJSON(assertionData, savedCredentials) {\n    if (getAlgoDetails(assertionData.id, savedCredentials)['algoName'] == 'RS256') {\n        return `\n                    let verified = await crypto.subtle.verify(\n                        {\n                        name: 'RSASSA-PKCS1-v1_5',\n                        hash: { name: 'SHA-256' }\n                        },\n                        Base64.decode(assertation.publicKeyRSA),        // Public Key sourced from Passkey Registration (Assertation stage)\n                        Base64.decode(assertion.signatureRaw),          // Assertion Signature\n                        Base64.decode(assertion.authenticatorDataJSON)  // authData + SHA256(clientDataJSON)\n                    );\n                    `\n    } else if (getAlgoDetails(assertionData.id, savedCredentials)['algoName'] == 'ES256') {\n        return `\n                    let verified = await crypto.subtle.verify(\n                            {\n                                name: 'ECDSA',\n                                namedCurve: \"P-256\", //added\n                                hash: { name: 'SHA-256' }\n                            },\n                            publicKeyECDSA,\n                            rawSignature, // Signature from authenticator\n                            authenticatorDataJSONRaw // authData + SHA256(clientDataJSON)\n                    );\n                    `\n    }\n\n}\n\nexport function renderLoginRetrievalJSON(passwordlessMode, challenge, savedCredentials) {\n    if (passwordlessMode == false) {\n        return `\n                    navigator.credentials.get(\n                        \"publicKey\": {\n                            \"challenge\": Uint8Array.from(\"${challenge}\"),\n                            \"rpId\": \"authfuture.com\", \n                            allowCredentials: ${getCredentialArrayStr(savedCredentials)},\n                            \"userVerification\": \"preferred\",\n                        }\n                    )\n                    `\n    } else {\n        return `\n                    navigator.credentials.get(\n                        \"publicKey\": {\n                            \"challenge\": Uint8Array.from(\"${challenge}\"),\n                            \"rpId\": \"authfuture.com\", \n                            \"userVerification\": \"preferred\",\n                        }\n                    )\n                    `\n    }\n}"],"names":[],"mappings":";;;;;;;;AAAA;;;AAGO,SAAS,yBAAyB,aAAa,EAAE,gBAAgB;IACpE,IAAI,IAAA,6KAAc,EAAC,cAAc,EAAE,EAAE,iBAAiB,CAAC,WAAW,IAAI,SAAS;QAC3E,OAAO,CAAC;;;;;;;;;;;oBAWI,CAAC;IACjB,OAAO,IAAI,IAAA,6KAAc,EAAC,cAAc,EAAE,EAAE,iBAAiB,CAAC,WAAW,IAAI,SAAS;QAClF,OAAO,CAAC;;;;;;;;;;;;oBAYI,CAAC;IACjB;AAEJ;AAGO,SAAS,sBAAsB,aAAa,EAAE,gBAAgB;IACjE,IAAI,IAAA,6KAAc,EAAC,cAAc,EAAE,EAAE,iBAAiB,CAAC,WAAW,IAAI,SAAS;QAC3E,OAAO,CAAC;;;;;;;;;;oBAUI,CAAC;IACjB,OAAO,IAAI,IAAA,6KAAc,EAAC,cAAc,EAAE,EAAE,iBAAiB,CAAC,WAAW,IAAI,SAAS;QAClF,OAAO,CAAC;;;;;;;;;;;oBAWI,CAAC;IACjB;AAEJ;AAEO,SAAS,yBAAyB,gBAAgB,EAAE,SAAS,EAAE,gBAAgB;IAClF,IAAI,oBAAoB,OAAO;QAC3B,OAAO,CAAC;;;0DAG0C,EAAE,UAAU;;8CAExB,EAAE,IAAA,oLAAqB,EAAC,kBAAkB;;;;oBAIpE,CAAC;IACjB,OAAO;QACH,OAAO,CAAC;;;0DAG0C,EAAE,UAAU;;;;;oBAKlD,CAAC;IACjB;AACJ","debugId":null}},
    {"offset": {"line": 3328, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/WebAuthn-Tool/WebAuthn-Tool.js"],"sourcesContent":["import {Button, Container, Modal, ButtonGroup} from 'react-bootstrap';\n\n\n\nimport hljs from \"highlight.js/lib/core\";\nimport javascript from \"highlight.js/lib/languages/javascript\";\nimport \"highlight.js/styles/monokai.css\";\n\nimport sha256 from 'crypto-js/sha256';\n\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { solarizedlight, vscDarkPlus, dark, coldarkDark, materialDark, duotoneDark, oneDark} from 'react-syntax-highlighter/dist/esm/styles/prism';\n\n\n\nimport { useState, useRef, useEffect } from 'react';\n\nimport { GenerateBase32SecretKey } from \"./utilities/generate-base-32-key\";\n\nimport { arrayBufferToBase64 } from \"./utilities/base64\";\n\nimport { concatArrayBuffers } from \"./utilities/concat-array-buffers\";\n\nimport Accordion from 'react-bootstrap/Accordion';\nimport { Base64Binary, GenerateBase64SecretKey } from \"./utilities/base64\";\n\nimport { PasskeyExplanation } from \"./utilities/WebAuthnGraph\";\n\nimport { RenderListRegisteredPasskeys } from './utilities/list-registered-passkeys';\n\nimport { verifyES256, verifyRS256 } from './utilities/webauthn-verification-algos';\n\nimport { renderLoginPublicKeyJSON, renderLoginVerifyJSON, renderLoginRetrievalJSON } from './utilities/verification-methods-code-string';\n\n\nimport 'reactflow/dist/style.css';\n\n\nconst CryptoJS = require(\"crypto-js\");\n\nhljs.registerLanguage(\"javascript\", javascript);\n\n\nexport default function WebAuthnTool() {\n    const [registerNewPasskeyTab, setRegisterNewPasskeyTab] = useState(0)\n    const [loginWithPasskeyTab, setLoginWithPasskeyTab] = useState(0)\n\n\n    const [challenge, setChallenge] = useState(GenerateBase64SecretKey())\n\n    const [fullname, setFullname] = useState(\"John Smith\")\n    const [username, setUsername] = useState(\"Username\")\n\n\n    const [currCredID, setCurrCredID] = useState(\"\")\n    const [currPublicKey, setCurrPublicKey] = useState(\"\")\n    const [currAlg, setCurrAlg] = useState(0)\n    const [currJSON, setCurrJSON] = useState(\"\")\n    const [currTransports, setCurrTransports] = useState(\"\")\n\n\n    const [savedCredentials, setSavedCredentials] = useState([])\n\n    const [passwordlessMode, setPasswordlessMode] = useState(false)\n\n\n    \n\n    const [displaySpinner, setDisplaySpinner] = useState(false)\n\n\n    const [assertionData, setAssertionData] = useState({\n        \"id\": \"\",\n        \"authenticatorData\": \"\",\n        \"clientDataJSON\": \"\",\n        \"signature\": \"\",\n        \"userHandle\": \"\"\n    })\n\n    \n    const [assertionVerified, setAssertionVerified] = useState(false)\n\n\n    const [validationCalculations, setValidationCalculations] = useState({\n        'id': '',\n        'clientDataJSON': '',\n        'hmac-sha256': '',\n        'authenticatorJSONCombined': ''\n    })\n\n    useEffect(() => {\n        if ((registerNewPasskeyTab == 1) || (loginWithPasskeyTab == 1)) {\n            setChallenge(GenerateBase64SecretKey())\n        }\n    }, [registerNewPasskeyTab, loginWithPasskeyTab])\n\n\n    function toggleRegisterNewPasskeyTab() {\n        if (registerNewPasskeyTab === 0) {\n            setRegisterNewPasskeyTab((registerNewPasskeyTab) => 1)\n        } else {\n            setRegisterNewPasskeyTab((registerNewPasskeyTab) => 0)\n        }\n    }\n\n    function togglePasskeyLoginTab() {\n        if (loginWithPasskeyTab === 0) {\n            setLoginWithPasskeyTab((loginWithPasskeyTab) => 1)\n        } else {\n            setLoginWithPasskeyTab((loginWithPasskeyTab) => 0)\n        }\n    }\n\n    \n\n    function registerPasskey() {\n        setDisplaySpinner(true)\n\n        navigator.credentials.create({\n            \"publicKey\": {\n                \"challenge\": Base64Binary.decode(challenge),\n                \"rp\": {\n                    \"id\": window.location.hostname, \n                    \"name\": \"AuthFuture\"\n                },\n                \"user\": {\n                    \"id\": Uint8Array.from('user-id-1234', c => c.charCodeAt(0)),\n                    \"name\": username,\n                    \"displayName\": fullname\n                },\n                \"pubKeyCredParams\": [ \n                    {\n                        \"type\": \"public-key\",\n                        \"alg\": -7,\n                    },\n                    {\n                        \"type\": \"public-key\",\n                        \"alg\": -257\n                    }\n                ],\n                \"authenticatorSelection\": {\n                    \"userVerification\": \"preferred\",\n                    \"requireResidentKey\": false\n                },\n                \"excludeCredentials\": getCredentialArray()\n            }\n        })\n        .then((response) => {\n            console.log('Returned')\n            console.log(response)\n\n            const decoder = new TextDecoder(\"utf-8\");\n\n            setCurrCredID(arrayBufferToBase64(response.rawId))\n            setCurrPublicKey(arrayBufferToBase64(response.response.getPublicKey()))\n            setCurrAlg(response.response.getPublicKeyAlgorithm())\n            setCurrJSON(decoder.decode(response.response.clientDataJSON))\n            setCurrTransports(response.response.getTransports())\n\n            setDisplaySpinner(false)\n\n            setRegisterNewPasskeyTab(2)\n        })\n    }\n\n    function finishPasskeyRegistration() {\n        let newCredential = {\n            'idNum': savedCredentials.length,\n            'id': currCredID,\n            'publicKey': currPublicKey,\n            'clientDataJSON': currJSON,\n            'alg': currAlg,\n            'transports': currTransports\n        }\n\n        let newCredentialsList = []\n        savedCredentials.forEach((item) => {\n            newCredentialsList.push(item)\n        })\n        newCredentialsList.push(newCredential)\n\n        setSavedCredentials(newCredentialsList)\n\n        setRegisterNewPasskeyTab(0)\n\n        console.log('Saved Creds')\n        console.log(savedCredentials)\n    }\n\n\n    function RenderPasskeyRegisterTabPage1() {\n        \n        return (\n            <>\n\n                <h4>Step 1: Generating Passkey From Browser</h4>\n\n                <p><b>Challenge: </b>{challenge} <Button variant=\"dark\" onClick={(event) => {setChallenge(GenerateBase64SecretKey())}}><i class=\"bi bi-arrow-repeat\"></i></Button></p>\n\n                <form>\n                    <div>\n                        <b>Display Name: </b><input type=\"text\" value={fullname} onChange={(event) => {setFullname(event.target.value)}}></input>\n                    </div>\n                    <div>\n                        <b>Username: </b><input type=\"text\" value={username} onChange={(event) => {setUsername(event.target.value)}}></input>\n                    </div>\n                </form>\n\n                <span>Options provided to browser in navigate.credentials.create()</span>\n                <pre>\n                    <SyntaxHighlighter language=\"javascript\" style={coldarkDark}>\n                        {`\n                        navigator.credentials.create(\n                            \"publicKey\": {\n                                \"challenge\": Uint8Array.from(\"${challenge}\"),\n                                \"rp\": {\n                                    \"id\": \"authfuture.com\", \n                                    \"name\": \"AuthFuture\"\n                                },\n                                \"user\": {\n                                    \"id\": 1,\n                                    \"name\": \"${username}\",\n                                    \"displayName\": \"${fullname}\"\n                                },\n                                \"pubKeyCredParams\": [ \n                                    {\n                                        \"type\": \"public-key\",\n                                        \"alg\": -7,\n                                    },\n                                    {\n                                        \"type\": \"public-key\",\n                                        \"alg\": -257\n                                    }\n                                ],\n                                \"authenticatorSelection\": {\n                                    \"userVerification\": \"preferred\",\n                                    \"requireResidentKey\": false\n                                },\n                                \"excludeCredentials\": ${getCredentialArrayStr()}\n                            }\n                        )\n                        `}    \n                    </SyntaxHighlighter>\n                </pre>\n                <div style={{display: 'flex', flexDirection: 'row', height: '40px', gap: '5px'}}>\n                    <Button variant=\"danger\" onClick={toggleRegisterNewPasskeyTab}>Cancel</Button> <Button variant=\"success\" onClick={(event) => {registerPasskey()}}>Register</Button> \n                    <div style={{display: 'block', height: '40px', width: '40px'}}>\n                        {displaySpinner && (<div class=\"spinner\"></div>)}\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n    function RenderPasskeyRegisterTabPage2() {\n        return (\n            <>\n                <h2>Step 2: Store Attestation Response</h2>\n\n                <span>The following Attestation Response is returned from the navigator.credentials.create() function.</span><br/>\n\n                <pre>\n                    <SyntaxHighlighter language=\"javascript\" style={coldarkDark}>\n                        {`\n                        PublicKeyCredential {\n                            id: \"${currCredID}\"\n                            type: \"public-key\"\n                            authenticatorAttachment: \"platform\"\n                            response: AuthenticatorAttestationResponse {\n                                AttestationObject: ArrayBuffer()\n                                ClientDataJSON: ArrayBuffer()\n                                getClientDataJSON()\n                                getPublicKeyAlgorithm()\n                                getAlgorithm()\n                                getTransports()\n                            }\n                        }\n                        `}\n\n                    </SyntaxHighlighter>\n                </pre>\n\n                <span><b>Credential ID: </b> {currCredID}</span><br/>\n\n                <span><b>Public Key (Base 64): </b> {currPublicKey}</span><br/>\n\n                <span><b>Algorithm:</b> {currAlg}</span><br/>\n\n                <span><b>Transports: </b> {currTransports}</span><br/>\n\n                <span><b>Client Data JSON:</b> </span><br/>\n\n                <pre>\n                    <SyntaxHighlighter language=\"javascript\" style={coldarkDark}>\n                        {currJSON}\n                    </SyntaxHighlighter>\n                </pre>\n\n                <div style={{backgroundColor: 'green', border: '1px solid green', borderRadius: '20px', color: '#FFF', display: 'flex', flexDirection: 'row'}}>\n                    <div style={{width: '100px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                        <i class=\"bi bi-check-circle-fill\"></i>\n                    </div>\n                    <div style={{display: 'flex', flexDirection: 'column'}}>\n                        <span><h3>Challenge Verified</h3></span>\n                        <span><b>Challenge:</b> {challenge}</span>\n                        <span>Set challenge matches challenge returned in Client Data JSON</span>\n                    </div>\n                </div>\n\n                <Button variant=\"danger\" onClick={toggleRegisterNewPasskeyTab}>Cancel</Button> <Button variant=\"success\" onClick={(event) => {finishPasskeyRegistration()}}>Finish</Button>\n            </>\n        )\n    }\n\n    function passkeyTabTitle() {\n        return (\n            <>\n                <div id=\"passkey-tab-title\" style={{color: '#FFF', backgroundColor: '#2a2a2a'}}><h4>Create New Passkey</h4></div>\n            </>\n        )\n    }\n\n    function renderPasskeyRegisterTab() {\n        if (registerNewPasskeyTab === 1) {\n            return (\n                <>\n                    {passkeyTabTitle()}\n                    {RenderPasskeyRegisterTabPage1()}\n                </>\n            )\n        } else if (registerNewPasskeyTab === 2) {\n            return (\n                <>\n                    {passkeyTabTitle()}\n                    {RenderPasskeyRegisterTabPage2()}\n                </>\n            )\n        } \n    }\n\n    // --------------------------------------------------------------------------------------------------\n    /* Verify Passkey */\n\n      \n\n    function verificationCalculations() {\n        \n        let settings = {\n            'id': assertionData.id,\n            'clientDataJSON': assertionData.clientDataJSON,\n            'authenticatorData': assertionData.authenticatorData,\n            'publicKey': getPublicKey(assertionData.id)['publicKey'],\n            'signature': assertionData.signature, \n            'sha256': '',\n            'authenticatorJSONCombined': '',\n            'verified': ''\n        }\n\n        console.log('--------------------------------')\n\n\n        //Hash\n        let hash = sha256(window.atob(settings.clientDataJSON))\n        settings.sha256 = CryptoJS.enc.Base64.stringify(hash)\n\n        //AuthData + SHA256(ClientDataJSON)\n        settings.authenticatorJSONCombined = concatArrayBuffers(Base64Binary.decode(settings.authenticatorData), Base64Binary.decode(settings.sha256))\n\n        \n        let publicKeyRaw = Base64Binary.decode(settings.publicKey)\n        console.log('Public Key')\n        console.log(settings.publicKey)\n\n        let signatureRaw = Base64Binary.decode(settings.signature)\n        console.log('Signature')\n        console.log(settings.signature)\n\n        console.log('Client Data JSON')\n        console.log(settings.clientDataJSON)\n\n        console.log('SHA(ClientDataJSON)')\n        console.log(settings.sha256)\n\n        let authenticatorDataJSONRaw = Base64Binary.decode(settings.authenticatorJSONCombined)\n        console.log('Authenticator + SHA(JSON) ')\n        console.log(settings.authenticatorJSONCombined)\n\n        console.log('------------------------------')\n\n        if (getAlgoDetails(assertionData.id).algoName == 'RS256') {\n            // (-257) RS256: RSASSA-PKCS1-v1_5 using SHA-256  \n            verifyRS256(publicKeyRaw, signatureRaw, authenticatorDataJSONRaw, setAssertionVerified)\n        } else if (getAlgoDetails(assertionData.id).algoName == 'ES256') {\n            // (-7) ES256: ECDSA w/ SHA-256\n            verifyES256(publicKeyRaw, signatureRaw, authenticatorDataJSONRaw, setAssertionVerified)\n        }\n\n        setValidationCalculations(settings)\n    }\n    useEffect(() => {\n        if (assertionData.id.length > 0) {\n            verificationCalculations()\n        }\n    }, [assertionData])\n\n    function getCredentialArray() {\n        let creds = []\n\n        savedCredentials.forEach((cred) => {\n            creds.push({\n                'id': Base64Binary.decode(cred.id),\n                'type': 'public-key',\n                'transports': cred.transports\n            })\n        })\n\n        return creds\n    }\n\n    function getCredentialArrayStr() {\n        let creds = []\n\n        savedCredentials.forEach((cred) => {\n            creds.push({\n                'id': cred.id,\n                'type': 'public-key',\n                'transports': cred.transports\n            })\n        })\n\n        return JSON.stringify(creds, null, 20)\n    }\n\n    function verifyPasskey() {\n        let options = {\n            \"publicKey\": {\n                \"challenge\": Base64Binary.decode(challenge),\n                \"rpId\": window.location.hostname, \n                \"allowCredentials\": getCredentialArray(),\n                \"userVerification\": \"preferred\",\n            }\n        }\n\n        if (passwordlessMode) {\n            options = {\n                \"publicKey\": {\n                    \"challenge\": Base64Binary.decode(challenge),\n                    \"rpId\": window.location.hostname, \n                    \"userVerification\": \"preferred\",\n                }\n            }\n        }\n\n        setDisplaySpinner(true)\n\n        navigator.credentials.get(options)\n        .then((response) => {\n            console.log('Assertion')\n            console.log(response)\n\n            setAssertionData({\n                \"id\": arrayBufferToBase64(response.rawId),\n                \"authenticatorData\": arrayBufferToBase64(response.response.authenticatorData),\n                \"clientDataJSON\": arrayBufferToBase64(response.response.clientDataJSON),\n                \"signature\": arrayBufferToBase64(response.response.signature),\n                \"userHandle\": arrayBufferToBase64(response.response.userHandle)\n            })\n\n            setDisplaySpinner(false)\n\n            setLoginWithPasskeyTab(2)\n\n            //verificationCalculations()\n        })\n\n        \n\n    }\n\n\n    function renderPasskeyLoginTabPage1() {\n        return (\n            <>\n\n                <h4>Step 1: Get Passkey Assertion</h4>\n\n                <p><b>Challenge: </b>{challenge}<Button variant=\"dark\" onClick={(event) => {setChallenge(GenerateBase64SecretKey())}}><i class=\"bi bi-arrow-repeat\"></i></Button></p>\n\n                <p><label><input type=\"checkbox\" name=\"passwordlessMode\" checked={passwordlessMode} onChange={(event) => {setPasswordlessMode(event.target.checked)}}/><b> Enable Passwordless Mode</b> (Not available for passkeys with external/non-resident authenticators)</label></p>\n\n                <span>Options provided to browser in navigate.credentials.get()</span>\n                <pre>\n                    <SyntaxHighlighter language=\"javascript\" style={coldarkDark}>\n                        {`\n                        ${renderLoginRetrievalJSON(passwordlessMode, challenge, savedCredentials)}\n                        `}    \n                    </SyntaxHighlighter>\n                </pre>\n                <div style={{display: 'flex', flexDirection: 'row', height: '40px', gap: '5px'}}>\n                    <Button variant=\"danger\" onClick={togglePasskeyLoginTab}>Cancel</Button> <Button variant=\"success\" onClick={(event) => {verifyPasskey()}}>Verify</Button> \n                    <div style={{display: 'block', height: '40px', width: '40px'}}>\n                        {displaySpinner && (<div class=\"spinner\"></div>)}\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n    \n\n    function renderPasskeyLoginTabPage2() {\n        return (\n            <>\n\n                <h4>Step 2: Assertion Response</h4>\n\n                <pre>\n                    <SyntaxHighlighter language=\"javascript\" style={coldarkDark}>\n                        {`\n                        PublicKeyCredential {\n                            \"type\": \"public-key\",\n                            \"authenticatorAttachment\": \"platform\",\n                            \"id\": \"${assertionData.id}\",\n                            \"rawId\": ArrayBuffer\n                            \"response\": AuthenticatorAssertionResponse {\n                                \"authenticatorData\": ArrayBuffer\n                                \"clientDataJSON\": ArrayBuffer\n                                \"signature\": ArrayBuffer\n                                \"userHandle\": ArrayBuffer\n                            }\n                        }\n                        `}    \n                    </SyntaxHighlighter>\n                </pre>\n                \n                <span><b>Assertion Credential ID: </b> {assertionData.id}</span><br/>\n\n                <span><b>Authenticator Data:</b> {assertionData.authenticatorData}</span><br/>\n\n                <p><b>Assertion Signature:</b> {assertionData.signature}</p><br/>\n\n                <span><b>Client Data JSON: </b> {assertionData.clientDataJSON}</span><br/>\n                <span><b>SHA256(ClientDataJSON): </b> {validationCalculations.sha256}</span>\n\n                <pre>\n                    <SyntaxHighlighter language=\"javascript\" style={coldarkDark}>\n                        {`\n                        ${window.atob(assertionData.clientDataJSON)}\n                        `}    \n                    </SyntaxHighlighter>\n                </pre>\n\n                \n\n                <div style={{backgroundColor: 'green', border: '1px solid green', borderRadius: '20px', color: '#FFF', display: 'flex', flexDirection: 'row'}}>\n                    <div style={{width: '100px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                        <i class=\"bi bi-check-circle-fill\"></i>\n                    </div>\n                    <div style={{display: 'flex', flexDirection: 'column'}}>\n                        <span><h3>Challenge Verified</h3></span>\n                        <span><b>Challenge:</b> {challenge}</span>\n                        <span>Set challenge matches challenge returned in Client Data JSON. Prevents replay attacks.</span>\n                    </div>\n                </div>\n\n                <Button variant=\"danger\" onClick={togglePasskeyLoginTab}>Cancel</Button> <Button variant=\"success\" onClick={(event) => {setLoginWithPasskeyTab(3)}}>Next</Button>\n            </>\n        )\n    }\n\n\n    function getAlgoDetails(id) {\n        let output = {\n            'algoNum': -7,\n            'algoName': 'ES256'\n        }\n\n        savedCredentials.forEach((cred) => {\n            if (cred.id === id) {\n                output.algoNum = cred.alg\n                if (output.algoNum === -7) {\n                    output.algoName = 'ES256'\n                } else if (output.algoNum === -257) {\n                    output.algoName = 'RS256'\n                }\n            }\n        })\n\n        return output\n    }\n\n    function getPublicKey(id) {\n        let output = {\n            'publicKey': \"\"\n        }\n\n        savedCredentials.forEach((cred) => {\n            if (cred.id === id) {\n                output.publicKey = cred.publicKey\n            }\n        })\n\n        return output\n    }\n\n    function getSavedCred(id) {\n         let output = {\n            'publicKey': \"\"\n        }\n\n        savedCredentials.forEach((cred) => {\n            if (cred.id === id) {\n                output = cred\n            }\n        })\n\n        return output\n\n    }\n\n    \n\n    function renderPasskeyLoginTabPage3() {\n        return (\n            <>\n\n                <h4>Step 3: Import Public Key of Matched Passkey</h4>\n\n                <p><b>Assertion Credential ID:</b> {assertionData.id}</p>\n\n                <div style={{backgroundColor: 'green', border: '1px solid green', borderRadius: '20px', color: '#FFF', display: 'flex', flexDirection: 'row'}}>\n                    <div style={{width: '100px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                        <i class=\"bi bi-check-circle-fill\"></i>\n                    </div>\n                    <div style={{display: 'flex', flexDirection: 'column'}}>\n                        <span><h3>Assertion Credential ID Matched with Passkey #{getSavedCred(assertionData.id).idNum}</h3></span>\n                        <span><b>Passkey #{getSavedCred(assertionData.id).idNum} Credential ID:</b> {assertionData.id}</span>\n                    </div>\n                </div>\n\n                <p><b>Passkey #{getSavedCred(assertionData.id).idNum} Public Key: </b> {getPublicKey(assertionData.id)['publicKey']} </p>\n                <pre>\n                    <SyntaxHighlighter language=\"javascript\" style={coldarkDark}>\n                        {`\n                        ${renderLoginPublicKeyJSON(assertionData, savedCredentials)}\n                        `}    \n                    </SyntaxHighlighter>\n                </pre>\n                <br/>\n                <br/>        \n\n               <br/>\n\n                <Button variant=\"danger\" onClick={togglePasskeyLoginTab}>Cancel</Button> <Button variant=\"success\" onClick={(event) => {setLoginWithPasskeyTab(4)}}>Verify</Button>\n            </>\n        )\n    }\n\n     function renderPasskeyLoginTabPage4() {\n        return (\n            <>\n\n                <h4>Step 4: Verification</h4>\n\n                <p><b>Algorithm:</b> {getAlgoDetails(assertionData.id)['algoName']}</p>\n                <p><b>Passkey #{getSavedCred(assertionData.id).idNum} Public Key: </b> {getPublicKey(assertionData.id)['publicKey']} </p>\n                <p><b>Authenticator Data + SHA256(ClientDataJSON):</b> {validationCalculations.authenticatorJSONCombined}</p>\n                <p><b>Assertion Signature:</b> {validationCalculations.signature}</p>\n\n                <pre>\n                    <SyntaxHighlighter language=\"javascript\" style={coldarkDark}>\n                        {`\n                        ${renderLoginVerifyJSON(assertionData, savedCredentials)}\n                        `}    \n                    </SyntaxHighlighter>\n                </pre>      \n                {assertionVerified && (\n                <div style={{backgroundColor: 'green', border: '1px solid green', borderRadius: '20px', color: '#FFF', display: 'flex', flexDirection: 'row'}}>\n                    <div style={{width: '100px', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                        <i class=\"bi bi-check-circle-fill\"></i>\n                    </div>\n                    <div style={{display: 'flex', flexDirection: 'column'}}>\n                        <span><h3>Passkey Login Successful - Assertion Verified</h3></span>\n                        <span><b>Assertion Signature</b> decrypted with <b>Passkey #{getSavedCred(assertionData.id).idNum} Public Key</b> using <b>{getAlgoDetails(assertionData.id)['algoName']}</b> = SHA-256 Hash of <b>AuthenticatorData + SHA256(ClientDataJSON)</b></span>\n                    </div>\n                </div> \n                )}\n                {!assertionVerified && (\n                    <div className=\"alert alert-danger d-flex align-items-center\" role=\"alert\">\n                        <i className=\"bi bi-exclamation-triangle-fill me-2\"></i>\n                        <div>\n                            <h5 className=\"mb-1\">Passkey Login Failed - Assertion Not Verified</h5>\n                            The signature could not be verified. Please try again or register a new passkey.\n                        </div>\n                    </div>\n                )} \n\n                <Button variant=\"danger\" onClick={togglePasskeyLoginTab}>Cancel</Button> <Button variant=\"success\" \n                    onClick={(event) => {\n                    setAssertionVerified(false)\n                    setLoginWithPasskeyTab(0)\n                    }}>Finish</Button>\n            </>\n        )\n    }\n\n    function passkeyVerifyTabTitle() {\n        return (\n            <>\n                <div id=\"passkey-tab-title\" style={{color: '#FFF', backgroundColor: '#2a2a2a'}}><h4>Verify Passkey</h4></div>\n            </>\n        )\n    }\n\n    function renderLoginPasskeyTab() {\n        if (loginWithPasskeyTab === 1) {\n            return (\n                <>\n                    {passkeyVerifyTabTitle()}\n                    {renderPasskeyLoginTabPage1()}\n                </>\n            )\n        } else if (loginWithPasskeyTab === 2) {\n            return (\n                <>\n                    {passkeyVerifyTabTitle()}\n                    {renderPasskeyLoginTabPage2()}\n                </>\n            )\n        } else if (loginWithPasskeyTab === 3) {\n            return (\n                <>\n                    {passkeyVerifyTabTitle()}\n                    {renderPasskeyLoginTabPage3()}\n                </>\n            )\n        } else if (loginWithPasskeyTab === 4) {\n            return (\n                <>\n                    {passkeyVerifyTabTitle()}\n                    {renderPasskeyLoginTabPage4()}\n                </>\n            )\n        }\n    }\n\n    \n\n    return (\n        <>\n        <section style={{backgroundColor: '#f1f1f1', color: '#000', paddingTop: '10px', paddingBottom: '30px'}} id=\"webauthn-section\">\n            <Container>\n                <link rel=\"stylesheet\" href=\"/css/webauthn-tool.css\"></link>\n\n                <h2>WebAuthn Passkeys</h2>\n                <div id=\"webauthn-explanation-container\">\n                    {PasskeyExplanation()}\n                </div>\n\n                <h2>Passkeys Demo</h2>\n\n                <div id=\"webauthn-tool-container\" style={{}}>\n                    \n\n                    <div id=\"webauthn-register\" style={{borderBottom: '1px solid #000'}}>\n                        <h3><i class=\"bi bi-sliders\"></i> Configure Passkeys</h3>\n\n                        <div>\n                            <div id=\"passkey-list\" style={{paddingBottom: '20px'}}>\n                                {RenderListRegisteredPasskeys(savedCredentials)}\n                            </div>\n                            <div id=\"passkey-register-tab\" style={{backgroundColor: 'transparent'}}>\n                                {renderPasskeyRegisterTab()}\n                            </div>\n                            {(() => {\n                                if (registerNewPasskeyTab) {\n                                    return (\n                                        <>\n                                        </>\n                                    )\n                                } else {\n                                    return (\n                                        <Button variant=\"dark\" onClick={toggleRegisterNewPasskeyTab}><i class=\"bi bi-plus-circle\"></i> Add New Passkey</Button>\n                                    )\n                                }\n                            })()}\n                        </div>\n\n                        \n                    </div>\n                    <div id=\"webauthn-login\">\n                        <h3><i class=\"bi bi-box-arrow-in-right\"></i> Login with Passkey</h3>\n\n                        {renderLoginPasskeyTab()}\n                        \n                        {(() => {\n                            if (loginWithPasskeyTab === 0) {\n                                if (savedCredentials.length > 0) {\n                                    return (\n                                    <Button onClick={togglePasskeyLoginTab} variant=\"dark\">Start</Button>\n                                    )\n                                } else {\n                                    return (\n                                        <>\n                                            <div style={{display: 'flex', flexDirection: 'column'}}>\n                                                <span style={{color: 'red', fontSize: '18px'}}><i class=\"bi bi-exclamation-circle\"></i> No passkeys configured</span>\n                                                <div><Button variant=\"dark\" disabled >Start</Button></div>\n                                            </div>\n                                        </>\n                                    )\n                                }\n                            }\n                        })()}\n                    </div>\n                </div>\n            </Container>\n        </section>\n        </>\n    );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5337, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/components/index.ts"],"sourcesContent":["export { default as FeatureImage } from './FeatureImage/FeatureImage';\nexport { default as Footer } from './Footer/Footer'\nexport { default as NavigationBar} from './NavigationBar/NavigationBar'\nexport { default as TOTPTool } from './TOTP-Tool/TOTP-Tool'\nexport { default as WebAuthnTool } from './WebAuthn-Tool/WebAuthn-Tool'"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 5377, "column": 0}, "map": {"version":3,"sources":["file:///home/ethan/auth/AuthFutureImprovedv2/auth-future/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from 'next/document';\nimport clsx from 'clsx';\nimport { Footer, NavigationBar } from '@/components';\n\nconst Document = () => {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className={clsx('min-h-screen bg-background font-sans antialiased')}>\n        <NavigationBar/>\n        <Main />\n        <Footer/>\n        <NextScript />\n      </body>\n    </Html>\n  );\n};\n\nexport default Document;\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAAA;AAAA;;;;;;;;;;AAEA,MAAM,WAAW;IACf,qBACE,qKAAC,iIAAI;QAAC,MAAK;;0BACT,qKAAC,iIAAI;;;;;0BACL,qKAAC;gBAAK,WAAW,IAAA,mHAAI,EAAC;;kCACpB,qKAAC,kMAAa;;;;;kCACd,qKAAC,iIAAI;;;;;kCACL,qKAAC,sKAAM;;;;;kCACP,qKAAC,uIAAU;;;;;;;;;;;;;;;;;AAInB;uCAEe","debugId":null}}]
}